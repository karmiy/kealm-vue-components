(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{817:function(t,e,l){"use strict";l.r(e);var n=function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("div",{staticClass:"page-box"},[t._m(0),t._v(" "),l("div",{staticClass:"detail-box"},[l("h2",[t._v("基础下拉选择器")]),t._v(" "),l("p",[t._v("单选下拉，带有重选效果。")]),t._v(" "),l("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),l("sl-select",{attrs:{allowClear:""},on:{change:t.handleChange},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("search-code",{attrs:{code:t.CodeBasic}})],1),t._v(" "),l("div",{staticClass:"detail-box"},[l("h2",[t._v("三种大小")]),t._v(" "),l("p",[t._v("三种大小的选择框，当 size 分别为 large 和 small 时，输入框高度为 38px 和 24px ，默认高度为 30px。")]),t._v(" "),l("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),l("sl-select",{staticStyle:{"margin-right":"20px"},attrs:{allowClear:"",size:"large"},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("sl-select",{staticStyle:{"margin-right":"20px"},attrs:{allowClear:"",size:"default"},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("sl-select",{attrs:{allowClear:"",size:"small"},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("search-code",{attrs:{code:t.CodeSize}})],1),t._v(" "),l("div",{staticClass:"detail-box"},[l("h2",[t._v("多选下拉选择器")]),t._v(" "),l("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),l("p",[t._v("多选下拉，可以通过maxMultipleCount控制最多选择的个数。本例的maxMultipleCount为3")]),t._v(" "),l("sl-select",{attrs:{mode:"multiple",maxMultipleCount:3},model:{value:t.values,callback:function(e){t.values=e},expression:"values"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("p",[t._v("多选下拉，可以通过maxTagCount控制最多显示的个数。本例的maxTagCount为3")]),t._v(" "),l("sl-select",{attrs:{mode:"multiple",maxTagCount:3,allowClear:""},model:{value:t.values,callback:function(e){t.values=e},expression:"values"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("p",[t._v("多选下拉，可以通过maxTagCount和tagWidth控制最多显示的个数和tag的宽度。本例的maxTagCount为3，tagWidth为60")]),t._v(" "),l("sl-select",{attrs:{mode:"multiple",maxTagCount:3,tagWidth:60,allowClear:""},model:{value:t.values,callback:function(e){t.values=e},expression:"values"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("search-code",{attrs:{code:t.CodeMultiple}})],1),t._v(" "),l("div",{staticClass:"detail-box"},[l("h2",[t._v("带搜索框")]),t._v(" "),l("p",[t._v("带有搜索框的下拉选择器，未匹配到输入框内的内容显示未匹配结果。")]),t._v(" "),l("p",[t._v("搜索输入框根据多选与单选显示的位置有所不同。")]),t._v(" "),l("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),l("sl-select",{staticStyle:{"margin-right":"20px"},attrs:{mode:"multiple",showSearch:"",allowClear:""},model:{value:t.values,callback:function(e){t.values=e},expression:"values"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("sl-select",{attrs:{showSearch:"",allowClear:""},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("search-code",{attrs:{code:t.CodeSearch}})],1),t._v(" "),l("div",{staticClass:"detail-box"},[l("h2",[t._v("带全选/重选按钮的多选下拉框")]),t._v(" "),l("p",[t._v("可以通过设置showSelectAll让全选按钮显示。")]),t._v(" "),l("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),l("sl-select",{attrs:{mode:"multiple",showSelectAll:"",allowClear:""},model:{value:t.values,callback:function(e){t.values=e},expression:"values"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("search-code",{attrs:{code:t.CodeSelectAll}})],1),t._v(" "),l("div",{staticClass:"detail-box"},[l("h2",[t._v("带反选按钮的多选下拉框")]),t._v(" "),l("p",[t._v("可以通过设置showSelectInverse让反选按钮显示。")]),t._v(" "),l("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),l("sl-select",{attrs:{mode:"multiple",showSelectInverse:""},model:{value:t.values,callback:function(e){t.values=e},expression:"values"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.value},[t._v(t._s(e.label))])}),1),t._v(" "),l("search-code",{attrs:{code:t.CodeSelectInverse}})],1),t._v(" "),l("div",{staticClass:"detail-box"},[l("h2",[t._v("联动型下拉选择器")]),t._v(" "),l("p",[t._v("省市联动是最典型的例子。")]),t._v(" "),l("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),l("sl-select",{staticStyle:{"margin-right":"20px"},attrs:{defaultValue:t.provinceData[0]},on:{change:t.handleProvinceChange}},t._l(t.provinceData,function(e){return l("sl-select-option",{key:e},[t._v(t._s(e))])}),1),t._v(" "),l("sl-select",{model:{value:t.secondCity,callback:function(e){t.secondCity=e},expression:"secondCity"}},t._l(t.cities,function(e){return l("sl-select-option",{key:e},[t._v(t._s(e))])}),1),t._v(" "),l("search-code",{attrs:{code:t.CodeCascade}})],1),t._v(" "),l("div",{staticClass:"detail-box"},[l("h2",[t._v("禁用下拉选择器")]),t._v(" "),l("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),l("sl-select",{staticStyle:{"margin-right":"20px"},attrs:{disabled:""},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:e.label+"demo01",attrs:{value:e.value}},[t._v(t._s(e.label))])}),1),t._v(" "),l("sl-select",{attrs:{mode:"multiple",disabled:""},model:{value:t.values,callback:function(e){t.values=e},expression:"values"}},t._l(t.listOfOption,function(e){return l("sl-select-option",{key:"item.label",attrs:{value:e.value}},[t._v(t._s(e.label))])}),1),t._v(" "),l("search-code",{attrs:{code:t.CodeDisable}})],1),t._v(" "),t._m(1)])};n._withStripped=!0;var i=["福建省","广东省"],s={"福建省":["福州市","厦门市","莆田市"],"广东省":["广州市","佛山市","深圳"]},a={data:function(){return{CodeBasic:'    <template>\n        <div>\n            <sl-select v-model="value" allowClear @change="handleChange">\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                value: \'a10\',\n                listOfOption: [],\n              }\n            },\n            created() {\n                const children = [];\n                for (let i = 10; i < 36; i++) {\n                    children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\n                }\n                this.listOfOption = children;\n            },\n            methods: {\n                handleChange(value) {\n                    console.log(`selected ${value}`);\n                },\n            }\n        }\n    <\/script>',CodeSize:'    <template>\n        <div>\n            <sl-select v-model="value" allowClear size="large" style="margin-right: 20px;">\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n            <sl-select v-model="value" allowClear size="default" style="margin-right: 20px;">\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n            <sl-select v-model="value" allowClear size="small">\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                value: \'a10\',\n                listOfOption: [],\n              }\n            },\n            created() {\n                const children = [];\n                for (let i = 10; i < 36; i++) {\n                    children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\n                }\n                this.listOfOption = children;\n            },\n        }\n    <\/script>',CodeSearch:'    <template>\n        <div>\n            <sl-select v-model="values" mode="multiple" showSearch allowClear style="margin-right: 20px">\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n            <sl-select v-model="value" showSearch allowClear>\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                value: \'\',\n                values: [\'a10\', \'b11\'],\n                listOfOption: [],\n              }\n            },\n            created() {\n                const children = [];\n                for (let i = 10; i < 36; i++) {\n                    children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\n                }\n                this.listOfOption = children;\n            },\n        }\n    <\/script>',CodeMultiple:'    <template>\n        <div>\n            <p>多选下拉，可以通过maxMultipleCount控制最多选择的个数。本例的maxMultipleCount为3</p>\n            <sl-select v-model="values" mode="multiple" :maxMultipleCount="3">\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n            <p>多选下拉，可以通过maxTagCount控制最多显示的个数。本例的maxTagCount为3</p>\n            <sl-select v-model="values" mode="multiple" :maxTagCount="3" allowClear>\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n            <p>多选下拉，可以通过maxTagCount和tagWidth控制最多显示的个数和tag的宽度。本例的maxTagCount为3，tagWidth为60</p>\n            <sl-select v-model="values" mode="multiple" :maxTagCount="3" :tagWidth="60" allowClear>\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                values: [\'a10\', \'b11\'],\n                listOfOption: [],\n              }\n            },\n            created() {\n                const children = [];\n                for (let i = 10; i < 36; i++) {\n                    children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\n                }\n                this.listOfOption = children;\n            },\n        }\n    <\/script>',CodeSelectAll:'    <template>\n        <div>\n            <sl-select v-model="values" mode="multiple" showSelectAll allowClear>\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                values: [\'a10\', \'b11\'],\n                listOfOption: [],\n              }\n            },\n            created() {\n                const children = [];\n                for (let i = 10; i < 36; i++) {\n                    children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\n                }\n                this.listOfOption = children;\n            },\n        }\n    <\/script>',CodeSelectInverse:'    <template>\n        <div>\n            <sl-select v-model="values" mode="multiple" showSelectInverse>\n                <sl-select-option v-for="item in listOfOption" :key="item.value" >{{item.label}}</sl-select-option>\n            </sl-select>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                values: [\'a10\', \'b11\'],\n                listOfOption: [],\n              }\n            },\n            created() {\n                const children = [];\n                for (let i = 10; i < 36; i++) {\n                    children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\n                }\n                this.listOfOption = children;\n            },\n        }\n    <\/script>',CodeCascade:"    <template>\n        <div>\n            <sl-select :defaultValue=\"provinceData[0]\" style=\"margin-right: 20px\" @change=\"handleProvinceChange\">\n                <sl-select-option v-for=\"province in provinceData\" :key=\"province\">{{province}}</sl-select-option>\n            </sl-select>\n            <sl-select v-model=\"secondCity\">\n                <sl-select-option v-for=\"city in cities\" :key=\"city\">{{city}}</sl-select-option>\n            </sl-select>\n        </div>\n    </template>\n    <script>\n        const provinceData = ['福建省', '广东省'];\n        const cityData = {\n          '福建省': [ '福州市', '厦门市', '莆田市' ],\n          '广东省': [ '广州市', '佛山市', '深圳' ],\n        };\n        export default {\n            data() {\n              return {\n                provinceData,\n                cityData,\n                cities: cityData[provinceData[0]],\n                secondCity: cityData[provinceData[0]][0],\n              }\n            },\n            methods: {\n                handleProvinceChange(value) {\n                    this.cities = cityData[value];\n                    this.secondCity = cityData[value][0];\n                }\n            },\n        }\n    <\/script>",CodeDisable:'    <template>\n        <div>\n            <sl-select v-model="value" disabled style="margin-right: 20px">\n                <sl-select-option v-for="item in listOfOption" :key="item.label + \'demo01\'" :value="item.value">{{item.label}}</sl-select-option>\n            </sl-select>\n            <sl-select v-model="values" mode="multiple" disabled>\n                <sl-select-option v-for="item in listOfOption" key="item.label" :value="item.value">{{item.label}}</sl-select-option>\n            </sl-select>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                value: \'a10\',\n                values: [\'a10\', \'b11\'],\n                listOfOption: [],\n              }\n            },\n            created() {\n                const children = [];\n                for (let i = 10; i < 36; i++) {\n                    children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\n                }\n                this.listOfOption = children;\n            },\n        }\n    <\/script>',CodeBigList:'    import { Component, OnInit } from \'@angular/core\';\n    \n    @Component({\n        selector:\'salus-select-big-list\',\n        template: `\n            <button (click)="renderBigList()" salus-button>渲染长列表</button>\n            <salus-select style="margin-left: 20px;" \n            [(ngModel)]="bigListValue" \n            salusPlaceHolder="请选择" \n            salusMode="default">\n                <salus-option *ngFor="let option of bigList" \n                [salusLabel]="option.label" \n                [salusValue]="option.value"></salus-option>\n            </salus-select>\n        `,\n        styles : []\n    })\n    export class PageSelect implements OnInit {\n        bigListValue = [ \'a10\' ];\n        bigList = [];\n\n        ngOnInit() {\n          const children = [];\n          for (let i = 10; i < 36; i++) {\n              children.push({ label: i.toString(36) + i, value: i.toString(36) + i });\n          }\n          this.bigList = children;\n        }\n\n        renderBigList() {\n            const children = [];\n            for (let i = 10; i < 5000; i++) {\n                children.push({ label: i.toString(36) + i, value: i.toString(36) + i});\n            }\n            this.bigList = children;\n        }\n    }',value:"a10",values:["a10","b11"],listOfOption:[],provinceData:i,cityData:s,cities:s[i[0]],secondCity:s[i[0]][0]}},components:{SearchCode:function(){return new Promise(function(t){l.e(0).then(function(e){t(l(831))}.bind(null,l)).catch(l.oe)})}},created:function(){for(var t=[],e=10;e<36;e++)t.push({label:e.toString(36)+e,value:e.toString(36)+e});this.listOfOption=t},methods:{handleChange:function(t){console.log("selected ".concat(t))},handleProvinceChange:function(t){this.cities=s[t],this.secondCity=s[t][0]},test:function(){for(var t=arguments.length,e=new Array(t),l=0;l<t;l++)e[l]=arguments[l];console.log(1,e)}}},v=l(55),o=Object(v.a)(a,n,[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"detail-box"},[e("h1",[this._v("Select 下拉选择器")]),this._v(" "),e("p",[this._v("弹出一个下拉选择器给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。")]),this._v(" "),e("p",[this._v("当选项少时（少于 5 项），建议直接将选项平铺，使用 Radio 是更好的选择。")])])},function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("div",{staticClass:"detail-box"},[l("h2",[t._v("API")]),t._v(" "),l("p",{staticClass:"row-in-round"},[t._v("sl-select")]),t._v(" "),l("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[l("thead",[l("tr",[l("th",{attrs:{width:"15%"}},[t._v("参数")]),t._v(" "),l("th",{attrs:{width:"35%"}},[t._v("描述")]),t._v(" "),l("th",{attrs:{width:"35%"}},[t._v("类型")]),t._v(" "),l("th",{attrs:{width:"15%"}},[t._v("默认值")])])]),t._v(" "),l("tbody",[l("tr",[l("td",[t._v("allowClear")]),t._v(" "),l("td",[t._v("显示可以清除当前选项的重选按钮")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("false")])]),t._v(" "),l("tr",[l("td",[t._v("defaultValue")]),t._v(" "),l("td",[t._v("指定默认选中的条目")]),t._v(" "),l("td",[t._v("string|string[]|number|number[]")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("disabled")]),t._v(" "),l("td",[t._v("是否禁用")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("false")])]),t._v(" "),l("tr",[l("td",[t._v("dropdownClassName")]),t._v(" "),l("td",[t._v("下拉菜单的 className 属性")]),t._v(" "),l("td",[t._v("string")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("dropdownStyle")]),t._v(" "),l("td",[t._v("下拉菜单的 style 属性")]),t._v(" "),l("td",[t._v("object")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("filterOption")]),t._v(" "),l("td",[t._v("是否根据输入项进行筛选。当其为一个函数时，会接收 inputValue option 两个参数，当 option 符合筛选条件时，应返回 true，反之则返回 false。")]),t._v(" "),l("td",[t._v("boolean or function(inputValue, option)")]),t._v(" "),l("td",[t._v("true")])]),t._v(" "),l("tr",[l("td",[t._v("getPopupContainer")]),t._v(" "),l("td",[t._v("菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。")]),t._v(" "),l("td",[t._v("Function(triggerNode)")]),t._v(" "),l("td",[t._v("() => 父元素里最近拥有滚动条的元素")])]),t._v(" "),l("tr",[l("td",[t._v("maxTagCount")]),t._v(" "),l("td",[t._v("最多显示多少个 tag")]),t._v(" "),l("td",[t._v("number")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("maxMultipleCount")]),t._v(" "),l("td",[t._v("最多选中多少个标签")]),t._v(" "),l("td",[t._v("number")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("tagWidth")]),t._v(" "),l("td",[t._v("限制标签宽度")]),t._v(" "),l("td",[t._v("number")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("showSelectAll")]),t._v(" "),l("td",[t._v("在多选模式下，设置该值可控制全选按钮显示状态")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("false")])]),t._v(" "),l("tr",[l("td",[t._v("showSelectInverse")]),t._v(" "),l("td",[t._v("在多选模式下，设置该值可控制反选按钮显示状态")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("false")])]),t._v(" "),l("tr",[l("td",[t._v("maxTagPlaceholder")]),t._v(" "),l("td",[t._v("隐藏 tag 时显示的内容")]),t._v(" "),l("td",[t._v("slot/function(omittedValues)")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("mode")]),t._v(" "),l("td",[t._v("设置 Select 的模式为多选或标签")]),t._v(" "),l("td",[t._v("'default' | 'multiple' | 'tags'")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("notFoundContent")]),t._v(" "),l("td",[t._v("当下拉列表为空时显示的内容")]),t._v(" "),l("td",[t._v("string|slot")]),t._v(" "),l("td",[t._v("'Not Found'")])]),t._v(" "),l("tr",[l("td",[t._v("placeholder")]),t._v(" "),l("td",[t._v("选择框默认文字")]),t._v(" "),l("td",[t._v("string|slot")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("showSearch")]),t._v(" "),l("td",[t._v("显示搜索框，单选模式和多选模式效果不同")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("false")])]),t._v(" "),l("tr",[l("td",[t._v("showArrow")]),t._v(" "),l("td",[t._v("是否显示下拉小箭头")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("true")])]),t._v(" "),l("tr",[l("td",[t._v("size")]),t._v(" "),l("td",[t._v("选择框大小，可选 large small")]),t._v(" "),l("td",[t._v("string")]),t._v(" "),l("td",[t._v("default")])]),t._v(" "),l("tr",[l("td",[t._v("removeIcon")]),t._v(" "),l("td",[t._v("自定义的多选框清除图标")]),t._v(" "),l("td",[t._v("VNode | slot")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("value(v-model)")]),t._v(" "),l("td",[t._v("指定当前选中的条目")]),t._v(" "),l("td",[t._v("string|string[]|number|number[]")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("defaultOpen")]),t._v(" "),l("td",[t._v("是否默认展开下拉菜单")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("open")]),t._v(" "),l("td",[t._v("是否展开下拉菜单")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("-")])])])]),t._v(" "),l("p",{staticClass:"row-in-round"},[t._v("sl-select 事件")]),t._v(" "),l("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[l("thead",[l("tr",[l("th",{attrs:{width:"15%"}},[t._v("事件名称")]),t._v(" "),l("th",{attrs:{width:"70%"}},[t._v("说明")]),t._v(" "),l("th",{attrs:{width:"15%"}},[t._v("回调参数")])])]),t._v(" "),l("tbody",[l("tr",[l("td",[t._v("change")]),t._v(" "),l("td",[t._v("选中option时，调用此函数")]),t._v(" "),l("td",[t._v("function(value, option:Option/Array<Option>)")])]),t._v(" "),l("tr",[l("td",[t._v("deselect")]),t._v(" "),l("td",[t._v("取消选中时调用，参数为选中项的 value (或 key) 值，仅在 multiple 或 tags 模式下生效")]),t._v(" "),l("td",[t._v("function(value，option:Option)")])]),t._v(" "),l("tr",[l("td",[t._v("inputKeydown")]),t._v(" "),l("td",[t._v("键盘按下时回调")]),t._v(" "),l("td",[t._v("function")])]),t._v(" "),l("tr",[l("td",[t._v("mouseenter")]),t._v(" "),l("td",[t._v("鼠标移入时回调")]),t._v(" "),l("td",[t._v("function")])]),t._v(" "),l("tr",[l("td",[t._v("mouseleave")]),t._v(" "),l("td",[t._v("鼠标移出时回调")]),t._v(" "),l("td",[t._v("function")])]),t._v(" "),l("tr",[l("td",[t._v("popupScroll")]),t._v(" "),l("td",[t._v("下拉列表滚动时的回调")]),t._v(" "),l("td",[t._v("function")])]),t._v(" "),l("tr",[l("td",[t._v("search")]),t._v(" "),l("td",[t._v("文本框值变化时回调")]),t._v(" "),l("td",[t._v("function(value: string)")])]),t._v(" "),l("tr",[l("td",[t._v("select")]),t._v(" "),l("td",[t._v("被选中时调用，参数为选中项的 value (或 key) 值")]),t._v(" "),l("td",[t._v("function(value, option:Option)")])]),t._v(" "),l("tr",[l("td",[t._v("dropdownVisibleChange")]),t._v(" "),l("td",[t._v("展开下拉菜单的回调")]),t._v(" "),l("td",[t._v("function(open)")])])])]),t._v(" "),l("p",{staticClass:"row-in-round"},[t._v("sl-select-option")]),t._v(" "),l("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[l("thead",[l("tr",[l("th",{attrs:{width:"15%"}},[t._v("参数")]),t._v(" "),l("th",{attrs:{width:"35%"}},[t._v("描述")]),t._v(" "),l("th",{attrs:{width:"35%"}},[t._v("类型")]),t._v(" "),l("th",{attrs:{width:"15%"}},[t._v("默认值")])])]),t._v(" "),l("tbody",[l("tr",[l("td",[t._v("disabled")]),t._v(" "),l("td",[t._v("是否禁用")]),t._v(" "),l("td",[t._v("boolean")]),t._v(" "),l("td",[t._v("false")])]),t._v(" "),l("tr",[l("td",[t._v("key")]),t._v(" "),l("td",[t._v("和 value 含义一致。如果 Vue 需要你设置此项，此项值与 value 的值相同，然后可以省略 value 设置")]),t._v(" "),l("td",[t._v("string")]),t._v(" "),l("td")]),t._v(" "),l("tr",[l("td",[t._v("title")]),t._v(" "),l("td",[t._v("选中该 Option 后，Select 的 title")]),t._v(" "),l("td",[t._v("string")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("value")]),t._v(" "),l("td",[t._v("默认根据此属性值进行筛选")]),t._v(" "),l("td",[t._v("string|number")]),t._v(" "),l("td",[t._v("-")])]),t._v(" "),l("tr",[l("td",[t._v("class")]),t._v(" "),l("td",[t._v("Option 器类名")]),t._v(" "),l("td",[t._v("string")]),t._v(" "),l("td",[t._v("-")])])])])])}],!1,null,"bc33fbe2",null);o.options.__file="src/components/select/select.vue";e.default=o.exports}}]);