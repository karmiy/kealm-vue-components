(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{745:function(e,t,n){e.exports=n.p+"static/card-example.632acf4.png"},755:function(e,t,n){var s=n(784);"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);(0,n(73).default)("051966d5",s,!1,{})},783:function(e,t,n){"use strict";var s=n(755);n.n(s).a},784:function(e,t,n){(e.exports=n(56)(!1)).push([e.i,"\n.upload-demo[data-v-7982db22] {\n    width: 450px;\n}\n",""])},798:function(e,t,n){"use strict";n.r(t);var s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{ref:"page",staticClass:"page-box salus-scrollbar layout"},[e._m(0),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("基础上传控件")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{attrs:{action:"https://jsonplaceholder.typicode.com/posts/"}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),e._v(" 点击上传\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeBasic}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("上传列表显示位置")]),e._v(" "),n("p",[e._v("默认显示在按钮下方。")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{attrs:{action:"https://jsonplaceholder.typicode.com/posts/",position:"top"}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),e._v(" 点击上传\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeBasic}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("上传列表")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{attrs:{action:"https://jsonplaceholder.typicode.com/posts/",defaultFileList:e.fileList}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),e._v(" 点击上传\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeFileList}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("过滤器")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{attrs:{action:"https://jsonplaceholder.typicode.com/posts/",fileList:e.filterList,multiple:!0},on:{change:e.handleChange}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),e._v(" 点击上传\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeFileList}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("图片列表")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{attrs:{action:"https://jsonplaceholder.typicode.com/posts/",listType:"picture",defaultFileList:e.pictureList}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),e._v(" 点击上传\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodePictureStyle}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("图片上传")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{staticClass:"avatar-uploader",attrs:{name:"avatar",listType:"picture-card",showUploadList:!1,action:"https://jsonplaceholder.typicode.com/posts/",beforeUpload:e.beforeUpload},on:{change:e.pictureChange}},[e.imageUrl?n("img",{attrs:{src:e.imageUrl,alt:"avatar"}}):n("div",[e.loading?n("i",{staticClass:"salus-icon-loading salus-icon-loading-gray"}):n("i",{staticClass:"salus-icon-plus-o"}),e._v(" "),n("div",{staticClass:"color-success"},[e._v("点击上传")])])]),e._v(" "),n("search-code",{attrs:{code:e.CodeAvatar}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("图片上传列表")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("div",{staticClass:"clearfix upload-demo"},[n("sl-upload",{attrs:{action:"https://jsonplaceholder.typicode.com/posts/",listType:"picture-card",fileList:e.pictureUploadList},on:{preview:e.handlePreview,change:e.pictureUploadChange}},[e.pictureUploadList.length<3?n("div",[n("i",{staticClass:"salus-icon-plus-o"}),e._v(" "),n("div",{staticClass:"color-success"},[e._v("点击上传")])]):e._e()]),e._v(" "),n("sl-modal",{attrs:{visible:e.previewVisible,footer:null},on:{cancel:e.handleCancel}},[n("img",{staticStyle:{width:"100%"},attrs:{alt:"example",src:e.previewImage}})])],1),e._v(" "),n("search-code",{attrs:{code:e.CodePictureCard}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("可拖拽/多选/限制数量上传")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("div",{staticClass:"upload-demo"},[n("sl-upload-dragger",{attrs:{name:"file",multiple:!0,action:"https://jsonplaceholder.typicode.com/posts/"},on:{change:e.dragChange}},[n("p",{staticClass:"ns-upload-drag-icon"},[n("i",{staticClass:"salus-icon-empty-info-o"})]),e._v(" "),n("p",{staticClass:"ns-upload-text"},[e._v("单击或拖动文件到此区域上传")]),e._v(" "),n("p",{staticClass:"ns-upload-hint"},[e._v("支持单个或批量上传。严禁上传公司数据相关的文件")])])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeDrag}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("手动上传")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("div",{staticClass:"upload-demo"},[n("sl-upload",{attrs:{fileList:e.handleList,remove:e.handleRemove,beforeUpload:e.beforeHandleUpload}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),n("span",[e._v("Select File")])])],1),e._v(" "),n("sl-button",{staticStyle:{"margin-top":"16px"},attrs:{type:"primary",disabled:0===e.handleList.length,loading:e.uploading},on:{click:e.handleUpload}},[e._v("\n                "+e._s(e.uploading?"Uploading":"Start Upload")+"\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeManually}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("错误显示重传按钮")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{attrs:{defaultFileList:e.reUploadList,reUploadButtonVisible:"",action:"https://jsonplaceholder.typicode.com/posts/"}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),e._v(" 点击上传\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeReupload}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("自定义上传")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{attrs:{customRequest:e.customRequest,action:"https://jsonplaceholder.typicode.com/posts/"}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),e._v(" 点击上传\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeCustomUpload}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("自定义分片上传结合错误续传")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-upload",{attrs:{customRequest:e.customBrustRequest,resumeButtonVisible:"",action:"https://jsonplaceholder.typicode.com/posts/"},on:{resume:e.resume}},[n("sl-button",{attrs:{icon:""}},[n("i",{staticClass:"salus-icon-upload-o"}),e._v(" 点击上传\n            ")])],1),e._v(" "),n("search-code",{attrs:{code:e.CodeCustomChunkUpload}})],1),e._v(" "),n("div",{staticClass:"detail-box",attrs:{id:"API"}},[n("h2",[e._v("API")]),e._v(" "),n("p",{staticClass:"row-in-round",attrs:{id:"Anchor-Props"}},[e._v("sl-upload")]),e._v(" "),e._m(1),e._v(" "),n("p",{staticClass:"row-in-round"},[e._v("sl-upload 事件")]),e._v(" "),e._m(2),e._v(" "),n("p",{staticClass:"row-in-round"},[e._v("change")]),e._v(" "),n("p",[e._v("上传中、完成、失败都会调用这个函数")]),e._v(" "),n("p",[e._v("文件状态改变的回调，返回为:")]),e._v(" "),n("search-code",{attrs:{code:e.changeParams,expand:!0,visibleTitle:!1}}),e._v(" "),n("p",[e._v("1、file 当前操作的文件对象")]),e._v(" "),n("search-code",{attrs:{code:e.changeFileParam,expand:!0,visibleTitle:!1}}),e._v(" "),n("p",[e._v("2、fileList 当前的文件列表")]),e._v(" "),n("p",[e._v("3、event 上传中的服务端响应内容，包含了上传进度等信息，高级浏览器支持")])],1)])};s._withStripped=!0;function a(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var o={data:function(){return{CodeBasic:'    <template>\n        <div>\n            <sl-upload action="https://jsonplaceholder.typicode.com/posts/" >\n                <sl-button icon>\n                    <i class="salus-icon-upload-o" /> 点击上传\n                </sl-button>\n            </sl-upload>\n        </div>\n    </template>',CodePosTop:'    <template>\n        <div>\n            <sl-upload action="https://jsonplaceholder.typicode.com/posts/" position="top" >\n                <sl-button icon>\n                    <i class="salus-icon-upload-o" /> 点击上传\n                </sl-button>\n            </sl-upload>\n        </div>\n    </template>',CodeFileList:"    <template>\n        <div>\n            <sl-upload action=\"https://jsonplaceholder.typicode.com/posts/\" :defaultFileList=\"fileList\" >\n                <sl-button icon>\n                    <i class=\"salus-icon-upload-o\" /> 点击上传\n                </sl-button>\n            </sl-upload>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                fileList: [{\n                  uid: '1',\n                  name: 'pictureA.png',\n                  status: 'done',\n                  response: 'Server Error 500', // custom error message to show\n                  url: require('../../assets/imgs/card-example.png'),\n                }, {\n                  uid: '2',\n                  name: 'pictureB.png',\n                  status: 'done',\n                  url: require('../../assets/imgs/card-example.png'),\n                }, {\n                  uid: '3',\n                  name: 'pictureC.png',\n                  status: 'error',\n                  response: 'Server Error 500', // custom error message to show\n                  url: require('../../assets/imgs/card-example.png'),\n                }],\n              }\n            },\n        }\n    <\/script>",CodeFilter:"    <template>\n        <div>\n            <sl-upload action=\"https://jsonplaceholder.typicode.com/posts/\" :fileList=\"filterList\" :multiple=\"true\" @change=\"handleChange\" >\n                <sl-button icon>\n                    <i class=\"salus-icon-upload-o\" /> 点击上传\n                </sl-button>\n            </sl-upload>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                filterList: [{\n                  uid: '-1',\n                  name: 'pictureA.png',\n                  status: 'done',\n                  url: require('../../assets/imgs/card-example.png'),\n                }],\n              }\n            },\n            methods: {\n              handleChange(info) {\n                let fileList = info.fileList;\n    \n                // 只显示最近上传的两个文件\n                fileList = fileList.slice(-2);\n    \n                // 读取响应并显示文件链接\n                fileList = fileList.map((file) => {\n                  if (file.response) {\n                    // 组件将显示文件的url作为链接\n                    file.url = file.response.url;\n                  }\n                  return file;\n                });\n                // 3. 过滤成功的文件\n                fileList = fileList.filter((file) => {\n                  if (file.response) {\n                    return file.response.status === 'success';\n                  }\n                  return true;\n                });\n                this.filterList = fileList\n              },\n            }\n        }\n    <\/script>",CodePictureStyle:"    <template>\n        <div>\n            <sl-upload action=\"https://jsonplaceholder.typicode.com/posts/\" listType=\"picture\" :defaultFileList=\"pictureList\" >\n                <sl-button icon>\n                    <i class=\"salus-icon-upload-o\" /> 点击上传\n                </sl-button>\n            </sl-upload>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                pictureList: [{ // 图片列表\n                  uid: '1',\n                  name: 'pictureA.png',\n                  status: 'done',\n                  response: 'Server Error 500', // custom error message to show\n                  url: require('../../assets/imgs/card-example.png'),\n                }, {\n                  uid: '2',\n                  name: 'pictureB.png',\n                  status: 'done',\n                  url: require('../../assets/imgs/card-example.png'),\n                }],\n              }\n            },\n        }\n    <\/script>",CodeAvatar:'    <template>\n        <div>\n            <sl-upload\n                name="avatar"\n                listType="picture-card"\n                class="avatar-uploader"\n                :showUploadList="false"\n                action="https://jsonplaceholder.typicode.com/posts/"\n                :beforeUpload="beforeUpload"\n                @change="pictureChange"\n            >\n                <img v-if="imageUrl" :src="imageUrl" alt="avatar" />\n                <div v-else>\n                    <i v-if="!loading" class="salus-icon-plus-o"></i>\n                    <i v-else class="salus-icon-loading salus-icon-loading-gray"></i>\n                    <div class="color-success">点击上传</div>\n                </div>\n            </sl-upload>\n        </div>\n    </template>\n    <script>\n        const getBase64 = (img, callback) => {\n          const reader = new FileReader()\n          reader.addEventListener(\'load\', () => callback(reader.result))\n          reader.readAsDataURL(img)\n        }\n        export default {\n            data() {\n              return {\n                imageUrl: \'\',\n                loading: false,\n              }\n            },\n            methods: {\n                pictureChange(info) {\n                  if (info.file.status === \'uploading\') {\n                    this.loading = true\n                    return\n                  }\n                  if (info.file.status === \'done\') {\n                    getBase64(info.file.originFileObj, (imageUrl) => {\n                      this.imageUrl = imageUrl\n                      this.loading = false\n                    })\n                  }\n                },\n                beforeUpload(file) {\n                  const isPNG = file.type === \'image/png\'\n                  if (!isPNG) {\n                    this.$message.error(\'You can only upload PNG file!\')\n                  }\n                  const isLt2M = file.size / 1024 / 1024 < 2\n                  if (!isLt2M) {\n                    this.$message.error(\'Image must smaller than 2MB!\')\n                  }\n                  return isPNG && isLt2M\n                },\n            },\n        }\n    <\/script>',CodePictureCard:'    <template>\n        <div class="clearfix upload-demo">\n            <sl-upload\n                action="https://jsonplaceholder.typicode.com/posts/"\n                listType="picture-card"\n                :fileList="pictureUploadList"\n                @preview="handlePreview"\n                @change="pictureUploadChange"\n            >\n                <div v-if="pictureUploadList.length < 3">\n                    <i class="salus-icon-plus-o"></i>\n                    <div class="color-success">点击上传</div>\n                </div>\n            </sl-upload>\n            <sl-modal :visible="previewVisible" :footer="null" @cancel="handleCancel">\n                <img alt="example" style="width: 100%" :src="previewImage" />\n            </sl-modal>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                pictureUploadList: [{\n                  uid: \'1\',\n                  name: \'pictureA.png\',\n                  status: \'done\',\n                  url: require(\'../../assets/imgs/card-example.png\'),\n                }],\n                previewVisible: false,\n                previewImage: \'\',\n              }\n            },\n            methods: {\n                handleCancel () {\n                  this.previewVisible = false\n                },\n                handlePreview (file) {\n                  this.previewImage = file.url || file.thumbUrl\n                  this.previewVisible = true\n                },\n                pictureUploadChange ({ fileList }) {\n                  this.pictureUploadList = fileList\n                },\n            },\n        }\n    <\/script>',CodeDrag:'    <template>\n        <div class="upload-demo">\n            <sl-upload-dragger name="file" :multiple="true" action="https://jsonplaceholder.typicode.com/posts/" @change="dragChange">\n                <p class="ns-upload-drag-icon">\n                    <i class="salus-icon-empty-info-o"></i>\n                </p>\n                <p class="ns-upload-text">单击或拖动文件到此区域上传</p>\n                <p class="ns-upload-hint">支持单个或批量上传。严禁上传公司数据相关的文件</p>\n            </sl-upload-dragger>\n        </div>\n    </template>\n    <script>\n        export default {\n            methods: {\n                dragChange(info) {\n                    const status = info.file.status;\n                    if (status !== \'uploading\') {\n                      console.log(info.file, info.fileList);\n                    }\n                    if (status === \'done\') {\n                      this.$message.success(`${info.file.name} file uploaded successfully.`);\n                    } else if (status === \'error\') {\n                      this.$message.error(`${info.file.name} file upload failed.`);\n                    }\n                },\n            },\n        }\n    <\/script>',CodeManually:'\n    <template>\n        <div class="upload-demo">\n            <sl-upload\n                :fileList="handleList"\n                :remove="handleRemove"\n                :beforeUpload="beforeHandleUpload"\n            >\n                <sl-button icon>\n                    <i class="salus-icon-upload-o"></i><span>Select File</span>\n                </sl-button>\n            </sl-upload>\n            <sl-button\n                type="primary"\n                @click="handleUpload"\n                :disabled="handleList.length === 0"\n                :loading="uploading"\n                style="margin-top: 16px"\n            >\n                {{uploading ? \'Uploading\' : \'Start Upload\' }}\n            </sl-button>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                  handleList: [], // 手动上传\n                  uploading: false, // 收到上传-uploading\n              }\n            },\n            methods: {\n                handleRemove(file) {\n                  const index = this.handleList.indexOf(file);\n                  const newFileList = this.handleList.slice();\n                  newFileList.splice(index, 1);\n                  this.handleList = newFileList\n                },\n                beforeHandleUpload(file) {\n                  this.handleList = [...this.handleList, file]\n                  return false;\n                },\n                handleUpload() {\n                  const { handleList } = this;\n                  const formData = new FormData();\n                  handleList.forEach((file) => {\n                    formData.append(\'files[]\', file);\n                  });\n                  this.uploading = true\n                  \n                  setTimeout(() => {\n                    this.handleList = []\n                    this.uploading = false\n                    this.$message.success(\'upload successfully.\');\n                  }, 2000);\n                },\n            },\n        }\n    <\/script>',CodeReupload:"    <template>\n        <div>\n            <sl-upload :defaultFileList=\"reUploadList\" reUploadButtonVisible action=\"https://jsonplaceholder.typicode.com/posts/\" >\n                <sl-button icon>\n                    <i class=\"salus-icon-upload-o\" /> 点击上传\n                </sl-button>\n            </sl-upload>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                  reUploadList: [{ // 上传列表\n                    uid: '1',\n                    name: 'pictureA.png',\n                    status: 'done',\n                    response: 'Server Error 500', // custom error message to show\n                    url: require('../../assets/imgs/card-example.png'),\n                  }, {\n                    uid: '2',\n                    name: 'pictureB.png',\n                    status: 'done',\n                    url: require('../../assets/imgs/card-example.png'),\n                  }, {\n                    uid: '3',\n                    name: 'pictureC.png',\n                    status: 'error',\n                    response: 'Server Error 500', // custom error message to show\n                    url: require('../../assets/imgs/card-example.png'),\n                  }],\n              }\n            },\n        }\n    <\/script>",CodeCustomUpload:"    <template>\n        <div>\n            <sl-upload :customRequest=\"customRequest\" action=\"https://jsonplaceholder.typicode.com/posts/\" >\n                <sl-button icon>\n                    <i class=\"salus-icon-upload-o\" /> 点击上传\n                </sl-button>\n            </sl-upload>\n        </div>\n    </template>\n    <script>\n        export default {\n            methods: {\n                customRequest(item) {\n                  const formData = new FormData();\n                  formData.append('file', item.file);\n                  formData.append('id', '1000');\n                  const xhr = new XMLHttpRequest();\n                  xhr.withCredentials = true;\n                  if (item.onProgress && xhr.upload) {\n                    xhr.upload.onprogress = function progress(e) {\n                      if (e.total > 0) {\n                        e.percent = (e.loaded / e.total) * 100;\n                      }\n                      item.onProgress(e);\n                    };\n                  }\n                  xhr.open('post', item.action, true);\n                  xhr.onerror = function error(e) {\n                    item.onError(e);\n                  };\n      \n                  xhr.onload = function onload() {\n                    item.onSuccess( xhr.responseText || xhr.response || null)\n                  };\n                  xhr.send(formData);\n                }\n            },\n        }\n    <\/script>",CodeCustomChunkUpload:"    <template>\n        <div>\n            <sl-upload :customRequest=\"customBrustRequest\" resumeButtonVisible @resume=\"resume\" action=\"https://jsonplaceholder.typicode.com/posts/\" >\n                <sl-button icon>\n                    <i class=\"salus-icon-upload-o\" /> 点击上传\n                </sl-button>\n            </sl-upload>\n        </div>\n    </template>\n    <script>\n        export default {\n            methods: {\n                customBrustRequest(item) {\n                  const size = item.file.size;\n                  const chunkSize = parseInt((size / 3) + '', 10);\n                  const maxChunk = Math.ceil(size / chunkSize);\n                  const reqs = Array(maxChunk).fill(0).map((v, index) => {\n                    const start = index * chunkSize;\n                    let end = start + chunkSize;\n                    if (size - end < 0) {\n                      end = size;\n                    }\n                    const formData = new FormData();\n                    formData.append('file', item.file.slice(start, end));\n                    formData.append('start', start.toString());\n                    formData.append('end', end.toString());\n                    formData.append('index', index.toString());\n                    return new Promise((resolve, reject) => {\n                      const xhr = new XMLHttpRequest();\n                      xhr.withCredentials = true;\n                      xhr.open('post', item.action, true);\n                      xhr.onerror = function error(e) {\n                        reject(e);\n                      };\n                      xhr.onload = function onload() {\n                        resolve( xhr.responseText || xhr.response || null)\n                      };\n                      xhr.send(formData);\n                    })\n                  });\n                  Promise.all(reqs).then(results => {\n                    item.onSuccess(results);\n                  }).catch(errors => {\n                    item.onError(errors);\n                  })\n                },\n                resume(item) {\n                  console.log(item, 'resume');\n                  `// 续传业务逻辑`\n                }\n            },\n        }\n    <\/script>",changeParams:"    {\n      file: { /* ... */ },\n      fileList: [ /* ... */ ],\n      event: { /* ... */ },\n    }",changeFileParam:"    {\n       uid: 'uid',      // 文件唯一标识，建议设置为负数，防止和内部产生的 id 冲突\n       name: 'xx.png'   // 文件名\n       status: 'done', // 状态有：uploading done error removed\n       response: '{\"status\": \"success\"}', // 服务端响应内容\n       linkProps: '{\"download\": \"image\"}', // 下载链接额外的 HTML 属性\n    }",fileList:[{uid:"1",name:"pictureA.png",status:"done",response:"Server Error 500",url:n(745)},{uid:"2",name:"pictureB.png",status:"done",url:n(745)},{uid:"3",name:"pictureC.png",status:"error",response:"Server Error 500",url:n(745)}],filterList:[{uid:"-1",name:"pictureA.png",status:"done",url:n(745)}],pictureList:[{uid:"1",name:"pictureA.png",status:"done",response:"Server Error 500",url:n(745)},{uid:"2",name:"pictureB.png",status:"done",url:n(745)}],imageUrl:"",loading:!1,pictureUploadList:[{uid:"1",name:"pictureA.png",status:"done",url:n(745)}],previewVisible:!1,previewImage:"",handleList:[],uploading:!1,reUploadList:[{uid:"1",name:"pictureA.png",status:"done",response:"Server Error 500",url:n(745)},{uid:"2",name:"pictureB.png",status:"done",url:n(745)},{uid:"3",name:"pictureC.png",status:"error",response:"Server Error 500",url:n(745)}]}},components:{SearchCode:function(){return new Promise(function(e){n.e(0).then(function(t){e(n(831))}.bind(null,n)).catch(n.oe)})}},methods:{handleChange:function(e){var t=e.fileList;t=(t=(t=t.slice(-2)).map(function(e){return e.response&&(e.url=e.response.url),e})).filter(function(e){return!e.response||"success"===e.response.status}),this.filterList=t},pictureChange:function(e){var t,n,s,a=this;"uploading"!==e.file.status?"done"===e.file.status&&(t=e.file.originFileObj,n=function(e){a.imageUrl=e,a.loading=!1},(s=new FileReader).addEventListener("load",function(){return n(s.result)}),s.readAsDataURL(t)):this.loading=!0},beforeUpload:function(e){var t="image/png"===e.type;t||this.$message.error("You can only upload PNG file!");var n=e.size/1024/1024<2;return n||this.$message.error("Image must smaller than 2MB!"),t&&n},handleCancel:function(){this.previewVisible=!1},handlePreview:function(e){this.previewImage=e.url||e.thumbUrl,this.previewVisible=!0},pictureUploadChange:function(e){var t=e.fileList;this.pictureUploadList=t},dragChange:function(e){var t=e.file.status;"uploading"!==t&&console.log(e.file,e.fileList),"done"===t?this.$message.success("".concat(e.file.name," file uploaded successfully.")):"error"===t&&this.$message.error("".concat(e.file.name," file upload failed."))},handleRemove:function(e){var t=this.handleList.indexOf(e),n=this.handleList.slice();n.splice(t,1),this.handleList=n},beforeHandleUpload:function(e){return this.handleList=[].concat(a(this.handleList),[e]),!1},handleUpload:function(){var e=this,t=this.handleList,n=new FormData;t.forEach(function(e){n.append("files[]",e)}),this.uploading=!0,setTimeout(function(){e.handleList=[],e.uploading=!1,e.$message.success("upload successfully.")},2e3)},customRequest:function(e){var t=new FormData;t.append("file",e.file),t.append("id","1000");var n=new XMLHttpRequest;n.withCredentials=!0,e.onProgress&&n.upload&&(n.upload.onprogress=function(t){t.total>0&&(t.percent=t.loaded/t.total*100),e.onProgress(t)}),n.open("post",e.action,!0),n.onerror=function(t){e.onError(t)},n.onload=function(){e.onSuccess(n.responseText||n.response||null)},n.send(t)},customBrustRequest:function(e){var t=e.file.size,n=parseInt(t/3+"",10),s=Math.ceil(t/n),a=Array(s).fill(0).map(function(s,a){var o=a*n,i=o+n;t-i<0&&(i=t);var l=new FormData;return l.append("file",e.file.slice(o,i)),l.append("start",o.toString()),l.append("end",i.toString()),l.append("index",a.toString()),new Promise(function(t,n){var s=new XMLHttpRequest;s.withCredentials=!0,s.open("post",e.action,!0),s.onerror=function(e){n(e)},s.onload=function(){t(s.responseText||s.response||null)},s.send(l)})});Promise.all(a).then(function(t){e.onSuccess(t)}).catch(function(t){e.onError(t)})},resume:function(e){console.log(e,"resume")}}},i=(n(783),n(55)),l=Object(i.a)(o,s,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"detail-box"},[t("h1",[this._v("Upload 上传")]),this._v(" "),t("p",[this._v("文件的选择上传控件。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[n("thead",[n("tr",[n("th",{attrs:{width:"15%"}},[e._v("参数")]),e._v(" "),n("th",{attrs:{width:"35%"}},[e._v("描述")]),e._v(" "),n("th",{attrs:{width:"35%"}},[e._v("类型")]),e._v(" "),n("th",{attrs:{width:"15%"}},[e._v("默认值")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("accept")]),e._v(" "),n("td",[e._v("接受上传的文件类型,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document")]),e._v(" "),n("td",[e._v("string")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("action")]),e._v(" "),n("td",[e._v("上传的地址")]),e._v(" "),n("td",[e._v("string|(file) => Promise")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("directory")]),e._v(" "),n("td",[e._v("支持上传文件夹")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("beforeUpload")]),e._v(" "),n("td",[e._v("上传文件之前的钩子，参数为上传的文件，若返回 false 则停止上传。支持返回一个 Promise 对象，Promise 对象 reject 时则停止上传，resolve 时开始上传（ resolve 传入 File 或 Blob 对象则上传 resolve 传入对象）。注意：IE9 不支持该方法。")]),e._v(" "),n("td",[e._v("(file, fileList) => boolean | Promise")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("customRequest")]),e._v(" "),n("td",[e._v("通过覆盖默认的上传行为，可以自定义自己的上传实现")]),e._v(" "),n("td",[e._v("function")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("data")]),e._v(" "),n("td",[e._v("上传所需参数或返回上传参数的方法")]),e._v(" "),n("td",[e._v("object|(file) => object")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("defaultFileList")]),e._v(" "),n("td",[e._v("默认已经上传的文件列表")]),e._v(" "),n("td",[e._v("object[]")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("disabled")]),e._v(" "),n("td",[e._v("是否禁用")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("fileList")]),e._v(" "),n("td",[e._v("已经上传的文件列表（受控），需要配合change事件")]),e._v(" "),n("td",[e._v("object[]")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("headers")]),e._v(" "),n("td",[e._v("设置上传的请求头部，IE10 以上有效")]),e._v(" "),n("td",[e._v("object")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("listType")]),e._v(" "),n("td",[e._v("上传列表的内建样式，支持三种基本样式 text, picture 和 picture-card")]),e._v(" "),n("td",[e._v("string")]),e._v(" "),n("td",[e._v("'text'")])]),e._v(" "),n("tr",[n("td",[e._v("multiple")]),e._v(" "),n("td",[e._v("是否支持多选文件，ie10+ 支持。开启后按住 ctrl 可选择多个文件。")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("name")]),e._v(" "),n("td",[e._v("发到后台的文件参数名")]),e._v(" "),n("td",[e._v("string")]),e._v(" "),n("td",[e._v("'file'")])]),e._v(" "),n("tr",[n("td",[e._v("showUploadList")]),e._v(" "),n("td",[e._v("是否展示 uploadList, 可设为一个对象，用于单独设定 showPreviewIcon 和 showRemoveIcon")]),e._v(" "),n("td",[e._v("Boolean or { showPreviewIcon?: boolean, showRemoveIcon?: boolean }")]),e._v(" "),n("td",[e._v("true")])]),e._v(" "),n("tr",[n("td",[e._v("supportServerRender")]),e._v(" "),n("td",[e._v("服务端渲染时需要打开这个")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("withCredentials")]),e._v(" "),n("td",[e._v("上传请求时是否携带 cookie")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("openFileDialogOnClick")]),e._v(" "),n("td",[e._v("点击打开文件对话框")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("true")])]),e._v(" "),n("tr",[n("td",[e._v("remove")]),e._v(" "),n("td",[e._v("点击移除文件时的回调，返回值为 false 时不移除。支持返回一个 Promise 对象，Promise 对象 resolve(false) 或 reject 时不移除")]),e._v(" "),n("td",[e._v("Function(file): boolean | Promise")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("position")]),e._v(" "),n("td",[e._v("上传列表显示位置")]),e._v(" "),n("td",[e._v("'bottom' | 'top'")]),e._v(" "),n("td",[e._v("'bottom'")])]),e._v(" "),n("tr",[n("td",[e._v("reUploadButtonVisible")]),e._v(" "),n("td",[e._v("当上传错误时显示重传按钮")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("resumeButtonVisible")]),e._v(" "),n("td",[e._v("当上传错误时显示续传按钮")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[n("thead",[n("tr",[n("th",{attrs:{width:"15%"}},[e._v("事件名称")]),e._v(" "),n("th",{attrs:{width:"70%"}},[e._v("说明")]),e._v(" "),n("th",{attrs:{width:"15%"}},[e._v("回调参数")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("change")]),e._v(" "),n("td",[e._v("上传文件改变时的状态")]),e._v(" "),n("td",[e._v("Function")])]),e._v(" "),n("tr",[n("td",[e._v("preview")]),e._v(" "),n("td",[e._v("点击文件链接或预览图标时的回调")]),e._v(" "),n("td",[e._v("Function(file)")])]),e._v(" "),n("tr",[n("td",[e._v("resume")]),e._v(" "),n("td",[e._v("续传时的回调")]),e._v(" "),n("td",[e._v("Function(file)")])])])])}],!1,null,"7982db22",null);l.options.__file="src/components/upload/upload.vue";t.default=l.exports}}]);