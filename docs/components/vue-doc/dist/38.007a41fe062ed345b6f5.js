(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{793:function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"page-box"},[e._m(0),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("基础样式")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-transfer",{attrs:{dataSource:e.mockData,titles:["Source","Target"],targetKeys:e.targetKeys,selectedKeys:e.selectedKeys,render:function(e){return e.title}},on:{change:e.handleChange,selectChange:e.handleSelectChange,scroll:e.handleScroll}}),e._v(" "),n("search-code",{attrs:{code:e.CodeBasic}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("带搜索的穿梭框")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-transfer",{attrs:{dataSource:e.mockData,showSearch:"",filterOption:e.filterOption,targetKeys:e.targetKeys,render:function(e){return e.title}},on:{change:e.handleChange,search:e.handleSearch}}),e._v(" "),n("search-code",{attrs:{code:e.CodeSearch}})],1),e._v(" "),n("div",{staticClass:"detail-box"},[n("h2",[e._v("自定义footer")]),e._v(" "),n("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),n("sl-transfer",{attrs:{dataSource:e.mockData,targetKeys:e.targetKeys,render:function(e){return e.title},filterSource:e.filterSource,filterTarget:e.filterTarget},on:{change:e.handleChange},scopedSlots:e._u([{key:"sourceFooter",fn:function(t){return n("sl-select",{attrs:{allowClear:"",placeholder:"请选择标签"},on:{change:function(n){return e.footerSelectChange(n,t.direction)}},model:{value:e.selectSource,callback:function(t){e.selectSource=t},expression:"selectSource"}},e._l(t.dataSource,function(t){return n("sl-select-option",{key:t.key,attrs:{disabled:t.disabled}},[e._v(e._s(t.title))])}),1)}},{key:"targetFooter",fn:function(t){return n("sl-select",{attrs:{allowClear:"",placeholder:"请选择标签"},on:{change:function(n){return e.footerSelectChange(n,t.direction)}},model:{value:e.selectTarget,callback:function(t){e.selectTarget=t},expression:"selectTarget"}},e._l(t.dataSource,function(t){return n("sl-select-option",{key:t.key,attrs:{disabled:t.disabled}},[e._v(e._s(t.title))])}),1)}}])}),e._v(" "),n("search-code",{attrs:{code:e.CodeFooterCustom}})],1),e._v(" "),e._m(1)])};r._withStripped=!0;function o(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var s={data:function(){for(var e=[],t=0;t<20;t++)e.push({key:(t+1).toString(),title:"content".concat(t+1),description:"description of content".concat(t+1),disabled:t%3<1});var n=[],r=[];return e.forEach(function(e){e.key%3>1?n.push(e.key):r.push(e.key)}),{CodeBasic:"    <template>\n        <div>\n            <sl-transfer\n                :dataSource=\"mockData\"\n                :titles=\"['Source', 'Target']\"\n                :targetKeys=\"targetKeys\"\n                :selectedKeys=\"selectedKeys\"\n                @change=\"handleChange\"\n                @selectChange=\"handleSelectChange\"\n                @scroll=\"handleScroll\"\n                :render=\"item=>item.title\"\n            />\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n                const mockData = [];\n                for (let i = 0; i < 20; i++) {\n                    mockData.push({\n                        key: (i + 1).toString(),\n                        title: `content${i + 1}`,\n                        description: `description of content${i + 1}`,\n                        disabled: i % 3 < 1,\n                    });\n                }\n                const oriTargetKeys = mockData\n                    .filter(item => item.key % 3 > 1)\n                    .map(item => item.key);\n                return {\n                    mockData,\n                    targetKeys: oriTargetKeys,\n                    selectedKeys: ['1', '4'],\n                }\n            },\n            methods: {\n                handleChange(nextTargetKeys, direction, moveKeys) {\n                    this.targetKeys = nextTargetKeys\n    \n                    console.log('targetKeys: ', nextTargetKeys);\n                    console.log('direction: ', direction);\n                    console.log('moveKeys: ', moveKeys);\n                },\n                handleSelectChange(sourceSelectedKeys, targetSelectedKeys) {\n                    this.selectedKeys = [...sourceSelectedKeys, ...targetSelectedKeys]\n    \n                    console.log('sourceSelectedKeys: ', sourceSelectedKeys);\n                    console.log('targetSelectedKeys: ', targetSelectedKeys);\n                },\n                handleScroll(direction, e) {\n                    console.log('direction:', direction);\n                    console.log('target:', e.target);\n                },\n            }\n        }\n    <\/script>",CodeSearch:'    <template>\n        <div>\n            <sl-transfer\n                :dataSource="mockData"\n                showSearch\n                :filterOption="filterOption"\n                :targetKeys="targetKeys"\n                @change="handleChange"\n                @search="handleSearch"\n                :render="item=>item.title"\n            >\n            </sl-transfer>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n                const mockData = [];\n                for (let i = 0; i < 20; i++) {\n                    mockData.push({\n                        key: (i + 1).toString(),\n                        title: `content${i + 1}`,\n                        description: `description of content${i + 1}`,\n                        disabled: i % 3 < 1,\n                    });\n                }\n                const oriTargetKeys = mockData\n                    .filter(item => item.key % 3 > 1)\n                    .map(item => item.key);\n                return {\n                    mockData,\n                    targetKeys: oriTargetKeys,\n                }\n            },\n            methods: {\n                handleChange(nextTargetKeys, direction, moveKeys) {\n                    this.targetKeys = nextTargetKeys\n    \n                    console.log(\'targetKeys: \', nextTargetKeys);\n                    console.log(\'direction: \', direction);\n                    console.log(\'moveKeys: \', moveKeys);\n                },\n                filterOption(inputValue, option) {\n                    return option.description.indexOf(inputValue) > -1;\n                },\n                handleSearch (dir, value) {\n                    console.log(\'search:\', dir, value);\n                },\n            }\n        }\n    <\/script>',CodeFooterCustom:'    <template>\n        <div>\n            <sl-transfer\n                :dataSource="mockData"\n                :targetKeys="targetKeys"\n                @change="handleChange"\n                :render="item=>item.title"\n                :filterSource="filterSource"\n                :filterTarget="filterTarget"\n            >\n                <sl-select v-model="selectSource" allowClear slot="sourceFooter" slot-scope="props" placeholder="请选择标签" @change="footerSelectChange($event, props.direction)">\n                    <sl-select-option v-for="item in props.dataSource" :key="item.key" :disabled="item.disabled" >{{item.title}}</sl-select-option>\n                </sl-select>\n                <sl-select v-model="selectTarget" allowClear slot="targetFooter" slot-scope="props" placeholder="请选择标签" @change="footerSelectChange($event, props.direction)">\n                    <sl-select-option v-for="item in props.dataSource" :key="item.key" :disabled="item.disabled" >{{item.title}}</sl-select-option>\n                </sl-select>\n            </sl-transfer>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n                const mockData = [];\n                for (let i = 0; i < 20; i++) {\n                    mockData.push({\n                        key: (i + 1).toString(),\n                        title: `content${i + 1}`,\n                        description: `description of content${i + 1}`,\n                        disabled: i % 3 < 1,\n                    });\n                }\n                const oriTargetKeys = [], oltTargetKeys = [];\n                mockData.forEach(item => {\n                  item.key % 3 > 1 ? oriTargetKeys.push(item.key) : oltTargetKeys.push(item.key);\n                })\n                return {\n                    mockData,\n                    sourceKeys: oltTargetKeys,\n                    targetKeys: oriTargetKeys,\n                    filterSource: oltTargetKeys,\n                    filterTarget: oriTargetKeys,\n                    selectSource: undefined,\n                    selectTarget: undefined,\n                }\n            },\n            methods: {\n                handleChange(nextTargetKeys) {\n                    this.filterTarget = this.targetKeys = nextTargetKeys\n                    this.filterSource = this.sourceKeys = this.mockData.filter(item => !nextTargetKeys.includes(item.key)).map(item => item.key)\n                    this.selectSource = this.selectTarget = undefined\n                },\n                footerSelectChange(value, direction) {\n                    if(direction === \'right\') {\n                        this.filterTarget = value ? [this.targetKeys.find(key => key === value)] : [...this.targetKeys];\n                    }else {\n                        this.filterSource = value? [this.sourceKeys.find(key => key === value)] : [...this.sourceKeys];\n                    }\n                }\n            }\n        }\n    <\/script>',mockData:e,sourceKeys:r,targetKeys:n,selectedKeys:["1","4"],filterSource:r,filterTarget:n,selectSource:void 0,selectTarget:void 0}},components:{SearchCode:function(){return new Promise(function(e){n.e(0).then(function(t){e(n(831))}.bind(null,n)).catch(n.oe)})}},methods:{handleChange:function(e,t,n){this.filterTarget=this.targetKeys=e,this.filterSource=this.sourceKeys=this.mockData.filter(function(t){return!e.includes(t.key)}).map(function(e){return e.key}),this.selectSource=this.selectTarget=void 0,console.log("targetKeys: ",e),console.log("direction: ",t),console.log("moveKeys: ",n)},handleSelectChange:function(e,t){this.selectedKeys=[].concat(o(e),o(t)),console.log("sourceSelectedKeys: ",e),console.log("targetSelectedKeys: ",t)},handleScroll:function(e,t){console.log("direction:",e),console.log("target:",t.target)},filterOption:function(e,t){return t.description.indexOf(e)>-1},handleSearch:function(e,t){console.log("search:",e,t)},footerSelectChange:function(e,t){"right"===t?this.filterTarget=e?[this.targetKeys.find(function(t){return t===e})]:o(this.targetKeys):this.filterSource=e?[this.sourceKeys.find(function(t){return t===e})]:o(this.sourceKeys)}}},a=n(55),i=Object(a.a)(s,r,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"detail-box"},[t("h1",[this._v("Transfer 穿梭框")]),this._v(" "),t("p",[this._v("双栏穿梭选择框。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"detail-box"},[n("h2",[e._v("API")]),e._v(" "),n("p",{staticClass:"row-in-round"},[e._v("sl-transfer")]),e._v(" "),n("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[n("thead",[n("tr",[n("th",{attrs:{width:"15%"}},[e._v("参数")]),e._v(" "),n("th",{attrs:{width:"35%"}},[e._v("描述")]),e._v(" "),n("th",{attrs:{width:"35%"}},[e._v("类型")]),e._v(" "),n("th",{attrs:{width:"15%"}},[e._v("默认值")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("dataSource")]),e._v(" "),n("td",[e._v("数据源，其中的数据将会被渲染到左边一栏中，targetKeys 中指定的除外")]),e._v(" "),n("td",[e._v("[{key: string.isRequired,title: string.isRequired,description: string,disabled: bool}][]")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("disabled")]),e._v(" "),n("td",[e._v("是否禁用")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("filterOption")]),e._v(" "),n("td",[e._v("接收 inputValue option 两个参数，当 option 符合筛选条件时，应返回 true，反之则返回 false")]),e._v(" "),n("td",[e._v("(inputValue, option): boolean")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("footer")]),e._v(" "),n("td",[e._v("可以设置为一个 作用域插槽")]),e._v(" "),n("td",[e._v('slot="footer" slot-scope="props"')]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("sourceFooter")]),e._v(" "),n("td",[e._v('左侧的footer，没有则取slot="footer"')]),e._v(" "),n("td",[e._v('slot="sourceFooter" slot-scope="props"')]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("targetFooter")]),e._v(" "),n("td",[e._v('右侧的footer，没有则取slot="footer"')]),e._v(" "),n("td",[e._v('slot="targetFooter" slot-scope="props"')]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("lazy")]),e._v(" "),n("td",[e._v("Transfer 使用了 [vc-lazy-load]优化性能，这里可以设置相关参数。设为 false 可以关闭懒加载")]),e._v(" "),n("td",[e._v("object|boolean")]),e._v(" "),n("td",[e._v("{ height: 32, offset: 32 }")])]),e._v(" "),n("tr",[n("td",[e._v("listStyle")]),e._v(" "),n("td",[e._v("两个穿梭框的自定义样式")]),e._v(" "),n("td",[e._v("object")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("locale")]),e._v(" "),n("td",[e._v("各种语言")]),e._v(" "),n("td",[e._v("object")]),e._v(" "),n("td",[e._v("{ itemUnit: '项', itemsUnit: '项', notFoundContent: '列表为空', searchPlaceholder: '请输入搜索内容' }")])]),e._v(" "),n("tr",[n("td",[e._v("operations")]),e._v(" "),n("td",[e._v("操作文案集合，顺序从上至下")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("['>', '<']")])]),e._v(" "),n("tr",[n("td",[e._v("render")]),e._v(" "),n("td",[e._v("每行数据渲染函数，该函数的入参为 dataSource 中的项，返回值为 element。或者返回一个普通对象，其中 label 字段为 element，value 字段为 title")]),e._v(" "),n("td",[e._v("Function(record)\t")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("selectedKeys")]),e._v(" "),n("td",[e._v("设置哪些项应该被选中")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("showSearch")]),e._v(" "),n("td",[e._v("是否显示搜索框")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("targetKeys")]),e._v(" "),n("td",[e._v("显示在右侧框数据的key集合")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("titles")]),e._v(" "),n("td",[e._v("标题集合，顺序从左至右")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("['', '']")])]),e._v(" "),n("tr",[n("td",[e._v("rowKey")]),e._v(" "),n("td",[e._v("dataSource里的数据值需要指定 key 值。对于 dataSource 默认将每列数据的 key 属性作为唯一的标识，没有则需要使用rowKey指定数据列主键")]),e._v(" "),n("td",[e._v("Function")]),e._v(" "),n("td",[e._v("record => record.key")])])])]),e._v(" "),n("p",{staticClass:"row-in-round"},[e._v("sl-transfer 事件")]),e._v(" "),n("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[n("thead",[n("tr",[n("th",{attrs:{width:"15%"}},[e._v("事件名称")]),e._v(" "),n("th",{attrs:{width:"70%"}},[e._v("说明")]),e._v(" "),n("th",{attrs:{width:"15%"}},[e._v("回调参数")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("change")]),e._v(" "),n("td",[e._v("选项在两栏之间转移时的回调函数")]),e._v(" "),n("td",[e._v("(targetKeys, direction, moveKeys): void")])]),e._v(" "),n("tr",[n("td",[e._v("scroll")]),e._v(" "),n("td",[e._v("选项列表滚动时的回调函数")]),e._v(" "),n("td",[e._v("(direction, event): void")])]),e._v(" "),n("tr",[n("td",[e._v("search")]),e._v(" "),n("td",[e._v("搜索框内容时改变时的回调函数")]),e._v(" "),n("td",[e._v("(direction: 'left'|'right', value: string): void")])]),e._v(" "),n("tr",[n("td",[e._v("selectChange")]),e._v(" "),n("td",[e._v("选中项发生改变时的回调函数")]),e._v(" "),n("td",[e._v("(sourceSelectedKeys, targetSelectedKeys): void")])])])])])}],!1,null,"90850ba2",null);i.options.__file="src/components/transfer/transfer.vue";t.default=i.exports}}]);