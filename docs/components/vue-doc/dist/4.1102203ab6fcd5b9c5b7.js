(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{559:function(e,t,r){var a=r(584);"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,r(71).default)("45f52842",a,!1,{})},583:function(e,t,r){"use strict";var a=r(559);r.n(a).a},584:function(e,t,r){(t=e.exports=r(54)(!1)).i(r(585),""),t.push([e.i,"\n",""])},585:function(e,t,r){(e.exports=r(54)(!1)).push([e.i,"/* 动态增减项 */\n.form-demo-box{\n  max-width: 600px;\n}\n\n/* 登陆框 */\n.login-form-forgot{\n  float:right;\n}\n\n/* 高级搜索 */\n.salus-advanced-search-form {\n  padding: 24px;\n  background: #fbfbfb;\n  border: 1px solid #d9d9d9;\n  border-radius: 6px;\n}\n\n.search-result-list {\n  margin-top:10px;\n  border: 1px dashed #e9e9e9;\n  border-radius: 6px;\n  background-color: #fafafa;\n  height: 40px;\n  text-align: center;\n  padding-top: 20px;\n}",""])},601:function(e,t,r){"use strict";r.r(t);var a=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"page-box"},[e._m(0),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("动态增减表单项")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("div",{staticClass:"detail-box form-demo-box"},[r("sl-form",{staticClass:"salus-advanced-search-form",attrs:{form:e.dynamicAddItemForm},on:{submit:function(t){return e.handleSubmit(t,"dynamicAddItemForm")}}},[e._l(e.dynamicAddItemForm.getFieldValue("keys"),function(t,a){return r("sl-form-item",{key:t,attrs:{label:"Passengers",required:!1}},[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["names["+t+"]",{preserve:!0,rules:[{required:!0,whitespace:!0,message:"Please input passenger's name or delete this field."}]}],expression:"[\n                          `names[${k}]`,\n                          {\n                            preserve: true,\n                            rules: [{\n                              required: true,\n                              whitespace: true,\n                              message: 'Please input passenger\\'s name or delete this field.',\n                            }],\n                          }\n                        ]"}],staticStyle:{width:"160px"},attrs:{placeholder:"passenger name"}}),e._v(" "),r("sl-button",{attrs:{icon:"",type:"link",disabled:1===e.dynamicAddItemForm.getFieldValue("keys").length},on:{click:function(){return e.remove(t)}}},[r("i",{staticClass:"salus-icon-round-minus-o"})])],1)}),e._v(" "),r("sl-form-item",{staticStyle:{"margin-left":"120px"}},[r("sl-button",{attrs:{type:"dashed",icon:""},on:{click:e.add}},[r("i",{staticClass:"salus-icon-add-o"}),e._v(" Add field\n                    ")])],1),e._v(" "),r("sl-form-item",{staticStyle:{"margin-left":"120px"}},[r("sl-button",{attrs:{type:"primary","html-type":"submit"}},[e._v("\n                        Submit\n                    ")])],1)],2)],1),e._v(" "),r("search-code",{attrs:{code:e.CodeDynamicAddFormItem}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("表单校验提示信息位置-右边")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("sl-form",{attrs:{form:e.validateFormTextRight},on:{submit:function(t){return e.handleSubmit(t,"validateFormTextRight")}}},[r("sl-form-item",{attrs:{label:"发送名单",hasFeedback:"",explainOutside:""}},[r("sl-radio-group",{directives:[{name:"decorator",rawName:"v-decorator",value:["radio",{rules:[{required:!0,message:"请选择发送名单类型!"}],initialValue:""}],expression:"[\n                      'radio',\n                      {\n                        rules: [{ required: true, message: '请选择发送名单类型!' }],\n                        initialValue: ''\n                      }\n                    ]"}]},[r("sl-radio",{attrs:{value:"E"}},[e._v("选择群组")]),e._v(" "),r("sl-radio",{attrs:{value:"F"}},[e._v("手动输入")])],1)],1),e._v(" "),r("sl-form-item",{attrs:{label:"发送方式"}},[r("sl-radio-group",[r("sl-radio",{attrs:{value:"N"}},[e._v("立即推送")]),e._v(" "),r("sl-radio",{attrs:{value:"D"}},[e._v("定时发送")])],1)],1),e._v(" "),r("sl-form-item",{attrs:{label:"发送时间",explainOutside:""}},[r("sl-date-picker",{directives:[{name:"decorator",rawName:"v-decorator",value:["dateTimeChose",{rules:[{required:!0,message:"请选择发送时间!"}]}],expression:"[\n                      'dateTimeChose',\n                      {\n                        rules: [{ required: true, message: '请选择发送时间!' }],\n                      }\n                    ]"}],attrs:{showTime:"",allowClear:"",format:"YYYY-MM-DD HH:mm:ss"}})],1),e._v(" "),r("sl-form-item",{attrs:{label:"模板名称",validateStatus:"error",explainOutside:"",required:"",help:"请填写模板名称!"}},[r("sl-input",{attrs:{placeholder:"请输入模板名称"}})],1),e._v(" "),r("sl-form-item",{attrs:{label:"短信内容",explainOutside:""}},[r("sl-textarea",{directives:[{name:"decorator",rawName:"v-decorator",value:["messageArea",{rules:[{required:!0,message:"请填写短信内容!"}]}],expression:"[\n                      'messageArea',\n                      {\n                        rules: [{ required: true, message: '请填写短信内容!' }],\n                      }\n                    ]"}],attrs:{row:"2"}}),e._v(" "),r("div",{attrs:{slot:"extra"},slot:"extra"},[e._v("1.长度不超过1000字符，按67字/条计费")]),e._v(" "),r("div",{attrs:{slot:"extra"},slot:"extra"},[e._v('2.营销类短信，请在短信模板后面增加"回T退订"')]),e._v(" "),r("div",{attrs:{slot:"extra"},slot:"extra"},[e._v("3.短信内容不能含有【】符号")]),e._v(" "),r("div",{attrs:{slot:"extra"},slot:"extra"},[e._v("4.如果是变量内容，模板的格式为：XXX")])],1),e._v(" "),r("sl-form-item",{attrs:{label:"短信签名",hasFeedback:"",explainOutside:"",iconOutside:""}},[r("sl-select",{directives:[{name:"decorator",rawName:"v-decorator",value:["choseGroup",{rules:[{required:!0,message:"请选择用户群组!"}],initialValue:"a10"}],expression:"[\n                      'choseGroup',\n                      {\n                        rules: [{ required: true, message: '请选择用户群组!' }],\n                        initialValue: 'a10'\n                      }\n                    ]"}],attrs:{showSearch:"",allowClear:"",placeholder:"请填写短信签名"}},[r("sl-select-option",{attrs:{value:"a10"}},[e._v("a10")]),e._v(" "),r("sl-select-option",{attrs:{value:"b11"}},[e._v("b11")])],1)],1),e._v(" "),r("sl-form-item",{staticStyle:{"margin-left":"120px"}},[r("sl-button",{attrs:{type:"primary","html-type":"submit"}},[e._v("\n                    Submit\n                ")])],1)],1),e._v(" "),r("search-code",{attrs:{code:e.CodeValidateRight}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("模态框中的表单")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("sl-button",{attrs:{type:"primary"},on:{click:e.showModal}},[r("span",[e._v("显示对话框")])]),e._v(" "),r("sl-modal",{attrs:{title:"提示"},on:{cancel:e.handleCancel,ok:e.modalSubmit},model:{value:e.isVisible,callback:function(t){e.isVisible=t},expression:"isVisible"}},[r("sl-form",{attrs:{form:e.modalForm}},[r("sl-form-item",e._b({attrs:{label:"名称",hasFeedback:""}},"sl-form-item",e.modalFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["title",{rules:[{required:!0,message:"请填写名称!"}]}],expression:"[\n                          'title',\n                          {\n                            rules: [{ required: true, message: '请填写名称!' }],\n                          }\n                        ]"}],attrs:{placeholder:"最多输入20个汉字"}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"描述"}},"sl-form-item",e.modalFormLayout,!1),[r("sl-textarea",{directives:[{name:"decorator",rawName:"v-decorator",value:["messageArea",{rules:[{required:!0,message:"请填写短信内容!"}]}],expression:"[\n                          'messageArea',\n                          {\n                            rules: [{ required: true, message: '请填写短信内容!' }],\n                          }\n                        ]"}],attrs:{placeholder:"最多可输入50个汉字"}})],1)],1)],1),e._v(" "),r("search-code",{attrs:{code:e.CodeInModal}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("水平登陆栏")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("sl-form",{attrs:{layout:"inline",form:e.inlineForm},on:{submit:function(t){return e.handleSubmit(t,"inlineForm")}}},[r("sl-form-item",{attrs:{validateStatus:e.userNameError()?"error":"",help:e.userNameError()||""}},[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["userName",{rules:[{required:!0,message:"请输入用户名!"}]}],expression:"[\n                      'userName',\n                      {rules: [{ required: true, message: '请输入用户名!' }]}\n                    ]"}],attrs:{placeholder:"请输入用户名"}},[r("i",{staticClass:"salus-icon-account-o",attrs:{slot:"prefix"},slot:"prefix"})])],1),e._v(" "),r("sl-form-item",{attrs:{validateStatus:e.passwordError()?"error":"",help:e.passwordError()||""}},[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["password",{rules:[{required:!0,message:"请输入密码!"}]}],expression:"[\n                      'password',\n                      {rules: [{ required: true, message: '请输入密码!' }]}\n                    ]"}],attrs:{type:"password",placeholder:"请输入密码"}},[r("i",{staticClass:"salus-icon-unlock-o",attrs:{slot:"prefix"},slot:"prefix"})])],1),e._v(" "),r("sl-form-item",[r("sl-button",{attrs:{type:"primary","html-type":"submit",disabled:e.hasErrors(e.inlineForm.getFieldsError())}},[e._v("\n                    登陆\n                ")])],1)],1),e._v(" "),r("search-code",{attrs:{code:e.CodeHorizontalLogin}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("登陆框")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("sl-form",{attrs:{form:e.loginForm},on:{submit:function(t){return e.handleSubmit(t,"loginForm")}}},[r("sl-form-item",e._b({},"sl-form-item",e.loginFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["userName",{rules:[{required:!0,message:"请输入用户名!"}]}],expression:"[\n                      'userName',\n                      { rules: [{ required: true, message: '请输入用户名!' }] }\n                    ]"}],attrs:{placeholder:"请输入用户名"}},[r("i",{staticClass:"salus-icon-account-o",attrs:{slot:"prefix"},slot:"prefix"})])],1),e._v(" "),r("sl-form-item",e._b({},"sl-form-item",e.loginFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["password",{rules:[{required:!0,message:"请输入密码!"}]}],expression:"[\n                      'password',\n                      { rules: [{ required: true, message: '请输入密码!' }] }\n                    ]"}],attrs:{type:"password",placeholder:"请输入密码"}},[r("i",{staticClass:"salus-icon-unlock-o",attrs:{slot:"prefix"},slot:"prefix"})])],1),e._v(" "),r("sl-form-item",e._b({},"sl-form-item",e.loginFormLayout,!1),[r("sl-checkbox",{directives:[{name:"decorator",rawName:"v-decorator",value:["remember",{valuePropName:"checked",initialValue:!0}],expression:"[\n                      'remember',\n                      {\n                        valuePropName: 'checked',\n                        initialValue: true,\n                      }\n                    ]"}]},[e._v("\n                    记住我\n                ")]),e._v(" "),r("a",{staticClass:"login-form-forgot",attrs:{href:"javascript:;"}},[e._v("忘记密码")]),e._v(" "),r("sl-button",{attrs:{type:"primary","html-type":"submit",full:""}},[e._v("\n                    登陆\n                ")]),e._v("\n                Or "),r("a",{attrs:{href:"javascript:;"}},[e._v("\n                    立即注册!\n                ")])],1)],1),e._v(" "),r("search-code",{attrs:{code:e.CodeNormalLogin}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("高级搜索")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("div",{staticClass:"form-demo-box"},[r("sl-form",{staticClass:"salus-advanced-search-form",attrs:{form:e.searchForm,layout:"vertical"},on:{submit:function(t){return e.handleSubmit(t,"searchForm")}}},[r("sl-row",{attrs:{gutter:24}},e._l(10,function(t){return r("sl-col",{key:t,style:{display:t<e.count?"block":"none"},attrs:{span:8}},[r("sl-form-item",{attrs:{label:"Field "+t}},[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["field-"+t,{rules:[{required:!0,message:"Input something!"}]}],expression:"[\n                                    `field-${i}`,\n                                    {\n                                      rules: [{\n                                        required: true,\n                                        message: 'Input something!',\n                                      }],\n                                    }\n                                ]"}],attrs:{placeholder:"placeholder"}})],1)],1)}),1),e._v(" "),r("sl-row",[r("sl-col",{style:{textAlign:"right"},attrs:{span:24}},[r("sl-button",{attrs:{type:"primary","html-type":"submit"}},[e._v("\n                            查询\n                        ")]),e._v(" "),r("sl-button",{style:{marginLeft:"8px"},on:{click:e.handleReset}},[e._v("\n                            清除\n                        ")]),e._v(" "),r("a",{style:{marginLeft:"8px",fontSize:"12px"},attrs:{href:"javascript:;"},on:{click:e.toggle}},[e._v("\n                            "+e._s(e.expand?"收起":"展开")+" "),r("i",{class:"salus-icon-arrow-"+(e.expand?"up":"down")+"-o"})])],1)],1)],1),e._v(" "),r("div",{staticClass:"search-result-list"},[e._v("\n                Search Result List\n            ")])],1),e._v(" "),r("search-code",{attrs:{code:e.CodeAdvancedSearch}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("表单校验")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("sl-form",{attrs:{form:e.validateForm},on:{submit:function(t){return e.handleSubmit(t,"validateForm")}}},[r("sl-form-item",e._b({attrs:{label:"邮箱"}},"sl-form-item",e.validateFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["email",{rules:[{type:"email",message:"邮箱格式不正确!"},{required:!0,message:"请输入邮箱!"}]}],expression:"[\n                      'email',\n                      {\n                        rules: [{\n                          type: 'email', message: '邮箱格式不正确!',\n                        }, {\n                          required: true, message: '请输入邮箱!',\n                        }]\n                      }\n                    ]"}]})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"密码"}},"sl-form-item",e.validateFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["password",{rules:[{required:!0,message:"请输入密码!"},{validator:e.validateToNextPassword}]}],expression:"[\n                      'password',\n                      {\n                        rules: [{\n                          required: true, message: '请输入密码!',\n                        }, {\n                          validator: validateToNextPassword,\n                        }],\n                      }\n                    ]"}],attrs:{type:"password"}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"确认密码"}},"sl-form-item",e.validateFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["confirm",{rules:[{required:!0,message:"请确认您的密码!"},{validator:e.compareToFirstPassword}]}],expression:"[\n                      'confirm',\n                      {\n                        rules: [{\n                          required: true, message: '请确认您的密码!',\n                        }, {\n                          validator: compareToFirstPassword,\n                        }],\n                      }\n                    ]"}],attrs:{type:"password"},on:{blur:e.handleConfirmBlur}})],1),e._v(" "),r("sl-form-item",e._b({},"sl-form-item",e.validateFormLayout,!1),[r("span",{attrs:{slot:"label"},slot:"label"},[e._v("\n                    别名 \n                    "),r("sl-tooltip",{attrs:{title:"您希望别人怎么称呼你?"}},[r("i",{staticClass:"salus-icon-quest-mark-o"})])],1),e._v(" "),r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["nickname",{rules:[{required:!0,message:"请输入别名!",whitespace:!0}]}],expression:"[\n                      'nickname',\n                      {\n                        rules: [{ required: true, message: '请输入别名!', whitespace: true }]\n                      }\n                    ]"}]})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"电话"}},"sl-form-item",e.validateFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["phone",{rules:[{required:!0,message:"请输入电话!"}]}],expression:"[\n                      'phone',\n                      {\n                        rules: [{ required: true, message: '请输入电话!' }],\n                      }\n                    ]"}],staticStyle:{width:"100%"}},[r("sl-select",{directives:[{name:"decorator",rawName:"v-decorator",value:["prefix",{initialValue:"86"}],expression:"[\n                            'prefix',\n                            { initialValue: '86' }\n                        ]"}],staticStyle:{width:"50px"},attrs:{slot:"addonBefore"},slot:"addonBefore"},[r("sl-select-option",{attrs:{value:"86"}},[e._v("\n                            +86\n                        ")]),e._v(" "),r("sl-select-option",{attrs:{value:"87"}},[e._v("\n                            +87\n                        ")])],1)],1)],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"网址"}},"sl-form-item",e.validateFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["website",{rules:[{required:!0,message:"请输入网址!"}]}],expression:"[\n                      'website',\n                      {\n                        rules: [{\n                          required: true, message: '请输入网址!',\n                        }]\n                      }\n                    ]"}]})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"验证码"}},"sl-form-item",e.validateFormLayout,!1),[r("sl-row",{attrs:{gutter:8}},[r("sl-col",{attrs:{span:12}},[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["captcha",{rules:[{required:!0,message:"请输入验证码!"}]}],expression:"[\n                              'captcha',\n                              {rules: [{ required: true, message: '请输入验证码!' }]}\n                            ]"}]})],1),e._v(" "),r("sl-col",{attrs:{span:12}},[r("sl-button",[e._v("获取验证码")])],1)],1)],1),e._v(" "),r("sl-form-item",e._b({},"sl-form-item",e.validateFormTailLayout,!1),[r("sl-checkbox",{directives:[{name:"decorator",rawName:"v-decorator",value:["agreement",{valuePropName:"checked"}],expression:"['agreement', {valuePropName: 'checked'}]"}]},[e._v("\n                    我接受该 "),r("a",{attrs:{href:"javascript:;"}},[e._v("协议")])])],1),e._v(" "),r("sl-form-item",e._b({},"sl-form-item",e.validateFormTailLayout,!1),[r("sl-button",{attrs:{type:"primary","html-type":"submit"}},[e._v("\n                    提交\n                ")])],1)],1),e._v(" "),r("search-code",{attrs:{code:e.CodeRegister}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("指令式表单校验")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("sl-form",{attrs:{form:e.directiveForm},on:{submit:function(t){return e.handleSubmit(t,"directiveForm")}}},[r("sl-form-item",e._b({attrs:{label:"名称",explainOutside:"",hasFeedback:"",validateStatus:e.fieldError("username")?"error":e.fieldTouched("username")?void 0:"",help:e.fieldError("username")||(e.directiveForm.isFieldValidating("username")?"加载中...":"")}},"sl-form-item",e.directiveFormLayout,!1),[r("div",{attrs:{slot:"extra"},slot:"extra"},[e._v("名称不超过10个字符")]),e._v(" "),r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["username",{rules:[{max:10,message:"名称过长!"},{required:!0,message:"名称不能为空!"},{validator:e.validatorAsync}]}],expression:"[\n                      'username',\n                      {\n                        rules: [{\n                            max: 10, message: '名称过长!',\n                        },{\n                            required: true, message: '名称不能为空!',\n                        },{\n                            validator: validatorAsync\n                        }]\n                      }\n                    ]"}]})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"邮箱",explainOutside:"",hasFeedback:"",validateStatus:e.fieldError("email")?"error":e.fieldTouched("email")?void 0:"",help:e.fieldError("email")||""}},"sl-form-item",e.directiveFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["email",{rules:[{type:"email",message:"邮箱格式不正确!"},{required:!0,message:"请输入邮箱!"}]}],expression:"[\n                      'email',\n                      {\n                        rules: [{\n                          type: 'email', message: '邮箱格式不正确!',\n                        }, {\n                          required: true, message: '请输入邮箱!',\n                        }]\n                      }\n                    ]"}]})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"密码",explainOutside:"",hasFeedback:"",validateStatus:e.fieldError("password")?"error":e.fieldTouched("password")?void 0:"",help:e.fieldError("password")||""}},"sl-form-item",e.directiveFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["password",{rules:[{required:!0,message:"请输入密码!"},{validator:e.directiveValidateToNextPassword}]}],expression:"[\n                      'password',\n                      {\n                        rules: [{\n                          required: true, message: '请输入密码!',\n                        }, {\n                          validator: directiveValidateToNextPassword,\n                        }],\n                      }\n                    ]"}],attrs:{type:"password"}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"确认密码",explainOutside:"",hasFeedback:"",validateStatus:e.fieldError("confirm")?"error":e.fieldTouched("confirm")?void 0:"",help:e.fieldError("confirm")||""}},"sl-form-item",e.directiveFormLayout,!1),[r("sl-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["confirm",{rules:[{required:!0,message:"请确认您的密码!"},{validator:e.directiveCompareToFirstPassword}]}],expression:"[\n                      'confirm',\n                      {\n                        rules: [{\n                          required: true, message: '请确认您的密码!',\n                        }, {\n                          validator: directiveCompareToFirstPassword,\n                        }],\n                      }\n                    ]"}],attrs:{type:"password"},on:{blur:e.directiveHandleConfirmBlur}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"评论",explainOutside:"",hasFeedback:"",validateStatus:e.fieldError("comment")?"error":e.fieldTouched("comment")?void 0:"",help:e.fieldError("comment")||""}},"sl-form-item",e.directiveFormLayout,!1),[r("sl-textarea",{directives:[{name:"decorator",rawName:"v-decorator",value:["comment",{rules:[{required:!0,message:"评论不能为空!"}]}],expression:"[\n                      'comment',\n                      {\n                        rules: [{ required: true, message: '评论不能为空!' }],\n                      }\n                    ]"}],attrs:{row:"2"}})],1),e._v(" "),r("sl-form-item",{attrs:{wrapperCol:{span:12,offset:7}}},[r("sl-button",{staticStyle:{"margin-right":"8px"},attrs:{type:"primary","html-type":"submit",disabled:e.validErrors()}},[e._v("\n                    提交\n                ")]),e._v(" "),r("sl-button",{on:{click:function(t){return e.directiveForm.resetFields()}}},[e._v("\n                    重置\n                ")])],1)],1),e._v(" "),r("search-code",{attrs:{code:e.CodeValidateReactive}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("v-model表单校验")]),e._v(" "),r("p",{staticClass:"code-left-line"},[e._v("Demo")]),e._v(" "),r("sl-form",[r("sl-form-item",e._b({attrs:{label:"名称",required:"",hasFeedback:"",validateStatus:e.validateModelField(e.modelUserName,/^[\w-\.(\u4e00-\u9fa5)]+$/)}},"sl-form-item",e.vModelFormLayout,!1),[e.validateModelFieldEmpty(e.modelUserName)?r("div",{attrs:{slot:"help"},slot:"help"},[e._v("请输入名称")]):e._e(),e._v(" "),e.validateModelFieldRule(e.modelUserName,/^[\w-\.(\u4e00-\u9fa5)]+$/)?r("div",{attrs:{slot:"help"},slot:"help"},[e._v("名称不符合规则")]):e._e(),e._v(" "),r("div",{attrs:{slot:"extra"},slot:"extra"},[e._v("名称不超过25个字符，仅支持中文、英文、数字、下划线、分隔符“-”、小数点")]),e._v(" "),r("sl-input",{on:{input:function(t){e.modelUserName.dirty=!0}},model:{value:e.modelUserName.value,callback:function(t){e.$set(e.modelUserName,"value",t)},expression:"modelUserName.value"}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{required:"",explainOutside:"",hasFeedback:"",validateStatus:e.validateModelField(e.modelMinScale,/^[\d]+$/)}},"sl-form-item",e.vModelFormLayout,!1),[r("span",{attrs:{slot:"label"},slot:"label"},[e._v("\n                    最小伸缩数 \n                    "),r("sl-tooltip",{attrs:{title:"提示"}},[r("i",{staticClass:"salus-icon-quest-mark-o"})])],1),e._v(" "),e.validateModelFieldEmpty(e.modelMinScale)?r("div",{attrs:{slot:"help"},slot:"help"},[e._v("请输入伸缩数")]):e._e(),e._v(" "),e.validateModelFieldRule(e.modelMinScale,/^[\d]+$/)?r("div",{attrs:{slot:"help"},slot:"help"},[e._v("请输入数字")]):e._e(),e._v(" "),r("div",{attrs:{slot:"extra"},slot:"extra"},[e._v("最小实例数为0，可能会造成伸缩组中文实例支持")]),e._v(" "),r("sl-input",{on:{input:function(t){e.modelMinScale.dirty=!0}},model:{value:e.modelMinScale.value,callback:function(t){e.$set(e.modelMinScale,"value",t)},expression:"modelMinScale.value"}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"输入校验",explainOutside:"",hasFeedback:"",validateStatus:"validating"}},"sl-form-item",e.vModelFormLayout,!1),[r("sl-input",{model:{value:e.modelInputValidate.value,callback:function(t){e.$set(e.modelInputValidate,"value",t)},expression:"modelInputValidate.value"}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{required:"",explainOutside:"",hasFeedback:"",validateStatus:"success"}},"sl-form-item",e.vModelFormLayout,!1),[r("span",{attrs:{slot:"label"},slot:"label"},[e._v("\n                    校验成功 \n                    "),r("sl-tooltip",{attrs:{title:"提示"}},[r("i",{staticClass:"salus-icon-quest-mark-o"})])],1),e._v(" "),r("sl-input",{model:{value:e.modelValidateSuccess.value,callback:function(t){e.$set(e.modelValidateSuccess,"value",t)},expression:"modelValidateSuccess.value"}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"警示信息",hasFeedback:"",validateStatus:"warning"}},"sl-form-item",e.vModelFormLayout,!1),[r("div",{attrs:{slot:"help"},slot:"help"},[e._v("名称不超过25个字符，仅支持中文、英文、数字、下划线、分隔符“-”、小数点")]),e._v(" "),r("sl-input",{model:{value:e.modelValidateWarn.value,callback:function(t){e.$set(e.modelValidateWarn,"value",t)},expression:"modelValidateWarn.value"}})],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"最大伸缩数"}},"sl-form-item",e.vModelFormTailLayout,!1),[r("sl-row",{attrs:{gutter:8}},[r("sl-col",{attrs:{span:12}},[r("sl-select",{model:{value:e.modelMaxScale.value,callback:function(t){e.$set(e.modelMaxScale,"value",t)},expression:"modelMaxScale.value"}},[r("sl-select-option",{attrs:{value:"Option 1"}},[e._v("Option 1")]),e._v(" "),r("sl-select-option",{attrs:{value:"Option 2"}},[e._v("Option 2")])],1)],1),e._v(" "),r("sl-col",{attrs:{span:12}},[r("a",{attrs:{href:"javascript:;"}},[e._v("新建启动配置")]),e._v(" "),r("sl-tooltip",{attrs:{title:"提示"}},[r("i",{staticClass:"salus-icon-quest-mark-o"})])],1)],1)],1),e._v(" "),r("sl-form-item",{attrs:{labelCol:{span:3},label:"最大伸缩数",hasFeedback:"",validateStatus:"validating"}},[r("sl-select",{staticStyle:{width:"331px"},model:{value:e.modelMaxScale.value,callback:function(t){e.$set(e.modelMaxScale,"value",t)},expression:"modelMaxScale.value"}},[r("sl-select-option",{attrs:{value:"Option 1"}},[e._v("Option 1")]),e._v(" "),r("sl-select-option",{attrs:{value:"Option 2"}},[e._v("Option 2")])],1)],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"计费方式"}},"sl-form-item",e.vModelFormLayout,!1),[r("sl-radio-group",{model:{value:e.modelBill.value,callback:function(t){e.$set(e.modelBill,"value",t)},expression:"modelBill.value"}},[r("sl-radio",{attrs:{value:"year"}},[e._v("包年")]),e._v(" "),r("sl-radio",{attrs:{value:"month"}},[e._v("包月")]),e._v(" "),r("sl-radio",{attrs:{value:"day"}},[e._v("包天")])],1)],1),e._v(" "),r("sl-form-item",e._b({attrs:{label:"购买数量"}},"sl-form-item",e.vModelFormLayout,!1),[r("sl-input-number",{attrs:{min:1,max:10,handleType:"symbols"},model:{value:e.modelPurchase.value,callback:function(t){e.$set(e.modelPurchase,"value",t)},expression:"modelPurchase.value"}})],1)],1),e._v(" "),r("search-code",{attrs:{code:e.CodeValidateStatic}})],1),e._v(" "),r("div",{staticClass:"detail-box"},[r("h2",[e._v("API")]),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("sl-form")]),e._v(" "),e._m(1),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("sl-form 事件")]),e._v(" "),e._m(2),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("Form.create(options) | this.$form.createForm(this, options)")]),e._v(" "),r("p",[e._v("JSX使用方式：")]),e._v(" "),r("search-code",{attrs:{code:e.CodeJSX,expand:!0,visibleTitle:!1}}),e._v(" "),r("p",[e._v("单文件template使用方式：")]),e._v(" "),r("search-code",{attrs:{code:e.CodeTemplate,expand:!0,visibleTitle:!1}}),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("options配置")]),e._v(" "),e._m(3),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("this.form")]),e._v(" "),r("p",[e._v("注意：使用 getFieldsValue getFieldValue setFieldsValue 等时，应确保对应的 field 已经用 getFieldDecorator 或 v-decorator 注册过了")]),e._v(" "),e._m(4),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("validateFields/validateFieldsAndScroll")]),e._v(" "),r("search-code",{attrs:{code:e.CodeValidateFields,expand:!0,visibleTitle:!1}}),e._v(" "),e._m(5),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("validateFields 的 callback 参数示例")]),e._v(" "),r("p",[e._v("errors：")]),e._v(" "),r("search-code",{attrs:{code:e.CodeValidateFieldsCbErrors,expand:!0,visibleTitle:!1}}),e._v(" "),r("p",[e._v("values：")]),e._v(" "),r("search-code",{attrs:{code:e.CodeValidateFieldsCbValues,expand:!0,visibleTitle:!1}}),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("Form.createFormField")]),e._v(" "),r("p",[e._v("用于标记 mapPropsToFields 返回的表单域数据")]),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v('this.form.getFieldDecorator(id, options) 和 v-decorator="[id, options]" ')]),e._v(" "),r("p",[e._v("经过 getFieldDecorator或v-decorator 包装的控件，表单控件会自动添加 value（或 valuePropName 指定的其他属性） onChange（或 trigger 指定的其他属性），数据同步将被 Form 接管，这会导致以下结果：")]),e._v(" "),r("p",[e._v("1. 你不再需要也不应该用 onChange 来做同步，但还是可以继续监听 onChange 等事件。")]),e._v(" "),r("p",[e._v("2. 你不能用控件的 value defaultValue 等属性来设置表单域的值，默认值可以用 getFieldDecorator 或 v-decorator 里的 initialValue。")]),e._v(" "),r("p",[e._v("3. 你不应该用 v-model，可以使用 this.form.setFieldsValue 来动态改变表单值。")]),e._v(" "),r("strong",[e._v("特别注意")]),e._v(" "),r("p",[e._v("1.getFieldDecorator 和 v-decorator 不能用于装饰纯函数组件。")]),e._v(" "),r("p",[e._v("2. getFieldDecorator 和 v-decorator 调用不能位于纯函数组件中。")]),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v('getFieldDecorator(id, options) 和 v-decorator="[id, options]" 参数')]),e._v(" "),e._m(6),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("sl-form-item")]),e._v(" "),r("p",[e._v("注意：一个 Form.Item 建议只放一个被 getFieldDecorator或v-decorator 装饰过的 child，当有多个被装饰过的 child 时，help required validateStatus 无法自动生成。")]),e._v(" "),e._m(7),e._v(" "),r("p",{staticClass:"row-in-round"},[e._v("校验规则")]),e._v(" "),e._m(8),e._v(" "),e._m(9)],1)])};a._withStripped=!0;var n={data:function(){return{CodeDynamicAddFormItem:'    <template>\n        <div>\n            <sl-form\n                :form="dynamicAddItemForm"\n                class="salus-advanced-search-form"\n                @submit="handleSubmit($event, \'dynamicAddItemForm\')"\n            >\n                <sl-form-item\n                    v-for="(k, index) in dynamicAddItemForm.getFieldValue(\'keys\')"\n                    :key="k"\n                    :label="\'Passengers\'"\n                    :required="false"\n                >\n                    <sl-input\n                        v-decorator="[\n                          `names[${k}]`,\n                          {\n                            preserve: true,\n                            rules: [{\n                              required: true,\n                              whitespace: true,\n                              message: \'Please input passenger\\\'s name or delete this field.\',\n                            }],\n                          }\n                        ]"\n                        placeholder="passenger name"\n                        style="width: 160px;"\n                    />\n                    <sl-button\n                        icon\n                        type="link"\n                        :disabled="dynamicAddItemForm.getFieldValue(\'keys\').length === 1"\n                        @click="() => remove(k)"\n                    >\n                        <i class="salus-icon-round-minus-o" />\n                    </sl-button>\n                </sl-form-item>\n                <sl-form-item style="margin-left: 120px;">\n                    <sl-button\n                        type="dashed"\n                        @click="add"\n                        icon\n                    >\n                        <i class="salus-icon-add-o" /> Add field\n                    </sl-button>\n                </sl-form-item>\n                <sl-form-item style="margin-left: 120px;">\n                    <sl-button\n                        type="primary"\n                        html-type="submit"\n                    >\n                        Submit\n                    </sl-button>\n                </sl-form-item>\n            </sl-form>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                id: 1,\n              }\n            },\n            beforeCreate () {\n                this.dynamicAddItemForm = this.$form.createForm(this);\n                this.dynamicAddItemForm.getFieldDecorator(\'keys\', { initialValue: [1], preserve: true });\n            },\n            methods: {\n                remove  (k) {\n                    const { dynamicAddItemForm } = this;\n                    const keys = dynamicAddItemForm.getFieldValue(\'keys\');\n                    if (keys.length === 1) {\n                        return;\n                    }\n                    dynamicAddItemForm.setFieldsValue({\n                        keys: keys.filter(key => key !== k),\n                    });\n                },\n                add  () {\n                    const { dynamicAddItemForm } = this;\n                    const keys = dynamicAddItemForm.getFieldValue(\'keys\');\n                    const nextKeys = keys.concat(++this.id);\n                    // 通知表单检测更改\n                    dynamicAddItemForm.setFieldsValue({\n                        keys: nextKeys,\n                    });\n                },\n                handleSubmit  (e, form) {\n                    e.preventDefault();\n                    this[form].validateFields((err, values) => {\n                        if (!err) {\n                            console.log(\'Received values of form: \', values);\n                        }\n                    });\n                },\n            }\n        }\n    <\/script>',CodeHorizontalLogin:'    <template>\n        <div>\n            <sl-form\n                layout="inline"\n                :form="inlineForm"\n                @submit="handleSubmit($event, \'inlineForm\')"\n            >\n                <sl-form-item\n                    :validateStatus="userNameError() ? \'error\' : \'\'"\n                    :help="userNameError() || \'\'"\n                >\n                    <sl-input\n                        v-decorator="[\n                          \'userName\',\n                          {rules: [{ required: true, message: \'请输入用户名!\' }]}\n                        ]"\n                        placeholder="请输入用户名"\n                    >\n                        <i class="salus-icon-account-o" slot="prefix"></i>\n                    </sl-input>\n                </sl-form-item>\n                <sl-form-item\n                    :validateStatus="passwordError() ? \'error\' : \'\'"\n                    :help="passwordError() || \'\'"\n                >\n                    <sl-input\n                        v-decorator="[\n                          \'password\',\n                          {rules: [{ required: true, message: \'请输入密码!\' }]}\n                        ]"\n                        type="password"\n                        placeholder="请输入密码"\n                    >\n                        <i class="salus-icon-unlock-o" slot="prefix"></i>\n                    </sl-input>\n                </sl-form-item>\n                <sl-form-item>\n                    <sl-button\n                        type="primary"\n                        html-type="submit"\n                        :disabled="hasErrors(inlineForm.getFieldsError())"\n                    >\n                        登陆\n                    </sl-button>\n                </sl-form-item>\n            </sl-form>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                inlineForm: this.$form.createForm(this),\n              }\n            },\n            mounted () {\n                this.$nextTick(() => {\n                    this.inlineForm.validateFields();\n                });\n            },\n            methods: {\n                userNameError () {\n                    const { getFieldError, isFieldTouched } = this.inlineForm;\n                    return isFieldTouched(\'userName\') && getFieldError(\'userName\');\n                },\n                passwordError () {\n                    const { getFieldError, isFieldTouched } = this.inlineForm;\n                    return isFieldTouched(\'password\') && getFieldError(\'password\');\n                },\n                hasErrors (fieldsError) {\n                    return Object.keys(fieldsError).some(field => fieldsError[field]);\n                },\n            }\n        }\n    <\/script>',CodeNormalLogin:'    <template>\n        <div>\n            <sl-form\n                :form="loginForm"\n                @submit="handleSubmit($event, \'loginForm\')"\n            >\n                <sl-form-item v-bind="loginFormLayout">\n                    <sl-input\n                        v-decorator="[\n                          \'userName\',\n                          { rules: [{ required: true, message: \'请输入用户名!\' }] }\n                        ]"\n                        placeholder="请输入用户名"\n                    >\n                        <i class="salus-icon-account-o" slot="prefix"></i>\n                    </sl-input>\n                </sl-form-item>\n                <sl-form-item v-bind="loginFormLayout">\n                    <sl-input\n                        v-decorator="[\n                          \'password\',\n                          { rules: [{ required: true, message: \'请输入密码!\' }] }\n                        ]"\n                        type="password"\n                        placeholder="请输入密码"\n                    >\n                        <i class="salus-icon-unlock-o" slot="prefix"></i>\n                    </sl-input>\n                </sl-form-item>\n                <sl-form-item v-bind="loginFormLayout">\n                    <sl-checkbox\n                        v-decorator="[\n                          \'remember\',\n                          {\n                            valuePropName: \'checked\',\n                            initialValue: true,\n                          }\n                        ]"\n                    >\n                        记住我\n                    </sl-checkbox>\n                    <a href="javascript:;" class="login-form-forgot">忘记密码</a>\n                    <sl-button\n                        type="primary"\n                        html-type="submit"\n                        full\n                    >\n                        登陆\n                    </sl-button>\n                    Or <a href="javascript:;">\n                        立即注册!\n                    </a>\n                </sl-form-item>\n            </sl-form>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                loginForm: this.$form.createForm(this),\n                loginFormLayout: {\n                    wrapperCol: {span: 7},\n                },\n              }\n            },\n            mounted () {\n                this.$nextTick(() => {\n                    this.inlineForm.validateFields();\n                });\n            },\n            methods: {\n                handleSubmit  (e, form) {\n                    e.preventDefault();\n                    this[form].validateFields((err, values) => {\n                        if (!err) {\n                            console.log(\'Received values of form: \', values);\n                        }\n                    });\n                },\n            }\n        }\n    <\/script>',CodeAdvancedSearch:'    <template>\n         <div class="form-demo-box">\n              <sl-form\n                  class="salus-advanced-search-form"\n                  :form="searchForm"\n                  layout="vertical"\n                  @submit="handleSubmit($event, \'searchForm\')"\n              >\n                  <sl-row :gutter="24">\n                      <sl-col\n                          v-for="i in 10"\n                          :key="i"\n                          :span="8"\n                          :style="{ display: i < count ? \'block\' : \'none\' }"\n                      >\n                          <sl-form-item :label="`Field ${i}`">\n                              <sl-input\n                                  v-decorator="[\n                                      `field-${i}`,\n                                      {\n                                        rules: [{\n                                          required: true,\n                                          message: \'Input something!\',\n                                        }],\n                                      }\n                                  ]"\n                                  placeholder="placeholder"\n                              />\n                          </sl-form-item>\n                      </sl-col>\n                  </sl-row>\n                  <sl-row>\n                      <sl-col\n                          :span="24"\n                          :style="{ textAlign: \'right\' }"\n                      >\n                          <sl-button\n                              type="primary"\n                              html-type="submit"\n                          >\n                              查询\n                          </sl-button>\n                          <sl-button\n                              :style="{ marginLeft: \'8px\' }"\n                              @click="handleReset"\n                          >\n                              清除\n                          </sl-button>\n                          <a\n                              href="javascript:;"\n                              :style="{ marginLeft: \'8px\', fontSize: \'12px\' }"\n                              @click="toggle"\n                          >\n                              {{expand ? \'收起\' : \'展开\'}} <i :class="`salus-icon-arrow-${expand ? \'up\' : \'down\'}-o`"></i>\n                          </a>\n                      </sl-col>\n                  </sl-row>\n              </sl-form>\n              <div class="search-result-list">\n                  Search Result List\n              </div>\n          </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                searchForm: this.$form.createForm(this),\n                expand: false,\n              }\n            },\n            mounted () {\n                this.$nextTick(() => {\n                    this.inlineForm.validateFields();\n                });\n            },\n            methods: {\n                handleReset () {\n                    this.searchForm.resetFields();\n                },\n                toggle  () {\n                    this.expand = !this.expand;\n                },\n                handleSubmit  (e, form) {\n                    e.preventDefault();\n                    this[form].validateFields((err, values) => {\n                        if (!err) {\n                            console.log(\'Received values of form: \', values);\n                        }\n                    });\n                },\n            }\n        }\n    <\/script>',CodeRegister:'    <template>\n         <div>\n              <sl-form\n                :form="validateForm"\n                @submit="handleSubmit($event, \'validateForm\')"\n            >\n                <sl-form-item\n                    v-bind="validateFormLayout"\n                    label="邮箱"\n                >\n                    <sl-input\n                        v-decorator="[\n                          \'email\',\n                          {\n                            rules: [{\n                              type: \'email\', message: \'邮箱格式不正确!\',\n                            }, {\n                              required: true, message: \'请输入邮箱!\',\n                            }]\n                          }\n                        ]"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="validateFormLayout"\n                    label="密码"\n                >\n                    <sl-input\n                        v-decorator="[\n                          \'password\',\n                          {\n                            rules: [{\n                              required: true, message: \'请输入密码!\',\n                            }, {\n                              validator: validateToNextPassword,\n                            }],\n                          }\n                        ]"\n                        type="password"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="validateFormLayout"\n                    label="确认密码"\n                >\n                    <sl-input\n                        v-decorator="[\n                          \'confirm\',\n                          {\n                            rules: [{\n                              required: true, message: \'请确认您的密码!\',\n                            }, {\n                              validator: compareToFirstPassword,\n                            }],\n                          }\n                        ]"\n                        type="password"\n                        @blur="handleConfirmBlur"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="validateFormLayout"\n                >\n                    <span slot="label">\n                        别名&nbsp;\n                        <sl-tooltip title="您希望别人怎么称呼你?">\n                            <i class="salus-icon-quest-mark-o"></i>\n                        </sl-tooltip>\n                    </span>\n                    <sl-input\n                        v-decorator="[\n                          \'nickname\',\n                          {\n                            rules: [{ required: true, message: \'请输入别名!\', whitespace: true }]\n                          }\n                        ]"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="validateFormLayout"\n                    label="电话"\n                >\n                    <sl-input\n                        v-decorator="[\n                          \'phone\',\n                          {\n                            rules: [{ required: true, message: \'请输入电话!\' }],\n                          }\n                        ]"\n                        style="width: 100%"\n                    >\n                        <sl-select\n                            slot="addonBefore"\n                            v-decorator="[\n                                \'prefix\',\n                                { initialValue: \'86\' }\n                            ]"\n                            style="width: 50px"\n                        >\n                            <sl-select-option value="86">\n                                +86\n                            </sl-select-option>\n                            <sl-select-option value="87">\n                                +87\n                            </sl-select-option>\n                        </sl-select>\n                    </sl-input>\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="validateFormLayout"\n                    label="网址"\n                >\n                    <sl-input\n                        v-decorator="[\n                          \'website\',\n                          {\n                            rules: [{\n                              required: true, message: \'请输入网址!\',\n                            }]\n                          }\n                        ]"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="validateFormLayout"\n                    label="验证码"\n                >\n                    <sl-row :gutter="8">\n                        <sl-col :span="12">\n                            <sl-input\n                                v-decorator="[\n                                  \'captcha\',\n                                  {rules: [{ required: true, message: \'请输入验证码!\' }]}\n                                ]"\n                            />\n                        </sl-col>\n                        <sl-col :span="12">\n                            <sl-button>获取验证码</sl-button>\n                        </sl-col>\n                    </sl-row>\n                </sl-form-item>\n                <sl-form-item v-bind="validateFormTailLayout">\n                    <sl-checkbox\n                        v-decorator="[\'agreement\', {valuePropName: \'checked\'}]"\n                    >\n                        我接受该 <a href="javascript:;">协议</a>\n                    </sl-checkbox>\n                </sl-form-item>\n                <sl-form-item v-bind="validateFormTailLayout">\n                    <sl-button\n                        type="primary"\n                        html-type="submit"\n                    >\n                        提交\n                    </sl-button>\n                </sl-form-item>\n            </sl-form>\n          </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                validateForm: this.$form.createForm(this),\n                validateFormLayout: { // 表单校验-布局\n                    labelCol: {span: 3},\n                    wrapperCol: {span: 12},\n                },\n                validateFormTailLayout: {\n                    wrapperCol: {span: 14, offset: 6},\n                },\n                confirmDirty: false,\n              }\n            },\n            methods: {\n                handleConfirmBlur  (e) {\n                    const value = e.target.value;\n                    this.confirmDirty = this.confirmDirty || !!value;\n                },\n                compareToFirstPassword  (rule, value, callback) {\n                    const form = this.validateForm;\n                    if (value && value !== form.getFieldValue(\'password\')) {\n                        // 把检验规则message改为‘密码不一致’\n                        callback(\'密码不一致!\');\n                    } else {\n                        callback();\n                    }\n                },\n                validateToNextPassword  (rule, value, callback) {\n                    const form = this.validateForm;\n                    if (value && this.confirmDirty) {\n                        form.validateFields([\'confirm\'], { force: true });\n                    }\n                    callback();\n                },\n                handleSubmit  (e, form) {\n                    e.preventDefault();\n                    this[form].validateFields((err, values) => {\n                        if (!err) {\n                            console.log(\'Received values of form: \', values);\n                        }\n                    });\n                },\n            }\n        }\n    <\/script>',CodeValidateReactive:"    <template>\n         <div>\n              <sl-form\n                :form=\"directiveForm\"\n                @submit=\"handleSubmit($event, 'directiveForm')\"\n            >\n                <sl-form-item\n                    v-bind=\"directiveFormLayout\"\n                    label=\"名称\"\n                    explainOutside\n                    hasFeedback\n                    :validateStatus=\"fieldError('username') ? 'error' : (fieldTouched('username') ? undefined : '')\"\n                    :help=\"fieldError('username') || (directiveForm.isFieldValidating('username') ? '加载中...' : '')\"\n                >\n                    <div slot=\"extra\">名称不超过10个字符</div>\n                    <sl-input\n                        v-decorator=\"[\n                          'username',\n                          {\n                            rules: [{\n                                max: 10, message: '名称过长!',\n                            },{\n                                required: true, message: '名称不能为空!',\n                            },{\n                                validator: validatorAsync\n                            }]\n                          }\n                        ]\"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind=\"directiveFormLayout\"\n                    label=\"邮箱\"\n                    explainOutside\n                    hasFeedback\n                    :validateStatus=\"fieldError('email') ? 'error' : (fieldTouched('email') ? undefined : '')\"\n                    :help=\"fieldError('email') || ''\"\n                >\n                    <sl-input\n                        v-decorator=\"[\n                          'email',\n                          {\n                            rules: [{\n                              type: 'email', message: '邮箱格式不正确!',\n                            }, {\n                              required: true, message: '请输入邮箱!',\n                            }]\n                          }\n                        ]\"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind=\"directiveFormLayout\"\n                    label=\"密码\"\n                    explainOutside\n                    hasFeedback\n                    :validateStatus=\"fieldError('password') ? 'error' : (fieldTouched('password') ? undefined : '')\"\n                    :help=\"fieldError('password') || ''\"\n                >\n                    <sl-input\n                        v-decorator=\"[\n                          'password',\n                          {\n                            rules: [{\n                              required: true, message: '请输入密码!',\n                            }, {\n                              validator: directiveValidateToNextPassword,\n                            }],\n                          }\n                        ]\"\n                        type=\"password\"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind=\"directiveFormLayout\"\n                    label=\"确认密码\"\n                    explainOutside\n                    hasFeedback\n                    :validateStatus=\"fieldError('confirm') ? 'error' : (fieldTouched('confirm') ? undefined : '')\"\n                    :help=\"fieldError('confirm') || ''\"\n                >\n                    <sl-input\n                        v-decorator=\"[\n                          'confirm',\n                          {\n                            rules: [{\n                              required: true, message: '请确认您的密码!',\n                            }, {\n                              validator: directiveCompareToFirstPassword,\n                            }],\n                          }\n                        ]\"\n                        type=\"password\"\n                        @blur=\"directiveHandleConfirmBlur\"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind=\"directiveFormLayout\"\n                    label=\"评论\"\n                    explainOutside\n                    hasFeedback\n                    :validateStatus=\"fieldError('comment') ? 'error' : (fieldTouched('comment') ? undefined : '')\"\n                    :help=\"fieldError('comment') || ''\"\n                >\n                    <sl-textarea\n                        row=\"2\"\n                        v-decorator=\"[\n                          'comment',\n                          {\n                            rules: [{ required: true, message: '评论不能为空!' }],\n                          }\n                        ]\"\n                    />\n                </sl-form-item>\n                <sl-form-item :wrapperCol=\"{span: 12, offset: 7}\">\n                    <sl-button\n                        type=\"primary\"\n                        html-type=\"submit\"\n                        style=\"margin-right: 8px\"\n                        :disabled=\"validErrors()\"\n                    >\n                        提交\n                    </sl-button>\n                    <sl-button\n                    >\n                        重置\n                    </sl-button>\n                </sl-form-item>\n            </sl-form>\n          </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                directiveForm: this.$form.createForm(this),\n                directiveFormLayout: {\n                    labelCol: {span: 3},\n                    wrapperCol: {span: 12},\n                },\n                directiveConfirmDirty: false,\n              }\n            },\n            methods: {\n                directiveHandleConfirmBlur(e) {\n                const value = e.target.value;\n                this.directiveConfirmDirty = this.directiveConfirmDirty || !!value;\n                },\n                directiveCompareToFirstPassword(rule, value, callback) {\n                    const form = this.directiveForm;\n                    if (value && value !== form.getFieldValue('password')) {\n                        callback('密码不一致!');\n                    } else {\n                        callback();\n                    }\n                },\n                directiveValidateToNextPassword(rule, value, callback) {\n                    const form = this.directiveForm;\n                    if (value && this.directiveConfirmDirty) {\n                        form.validateFields(['confirm'], { force: true });\n                    }\n                    callback();\n                },\n                validatorAsync(rule, value, callback) {\n                    clearTimeout(this.asyncTimeout);\n                    this.asyncTimeout = setTimeout(() => {\n                        callback();\n                    },1000);\n                },\n                fieldTouched(name) {\n                    return this.directiveForm.isFieldTouched(name);\n                },\n                fieldError(name) {\n                    return this.fieldTouched(name) && this.directiveForm.getFieldError(name);\n                },\n                validErrors() {\n                    const fieldsError = this.directiveForm.getFieldsError();\n                    return Object.keys(this.directiveForm.getFieldsValue()).every(field => this.fieldTouched(field))\n                        ? Object.keys(fieldsError).some(field => fieldsError[field]) : true;\n                },\n                handleSubmit  (e, form) {\n                    e.preventDefault();\n                    this[form].validateFields((err, values) => {\n                        if (!err) {\n                            console.log('Received values of form: ', values);\n                        }\n                    });\n                },\n            }\n        }\n    <\/script>",CodeValidateRight:'    <template>\n        <div>\n            <sl-form\n                :form="validateFormTextRight"\n                @submit="handleSubmit($event, \'validateFormTextRight\')"\n            >\n                <sl-form-item label="发送名单" hasFeedback explainOutside>\n                    <sl-radio-group\n                        v-decorator="[\n                          \'radio\',\n                          {\n                            rules: [{ required: true, message: \'请选择发送名单类型!\' }],\n                            initialValue: \'\'\n                          }\n                        ]"\n                    >\n                        <sl-radio value="E">选择群组</sl-radio>\n                        <sl-radio value="F">手动输入</sl-radio>\n                    </sl-radio-group>\n                </sl-form-item>\n                <sl-form-item label="发送方式">\n                    <sl-radio-group>\n                        <sl-radio value="N">立即推送</sl-radio>\n                        <sl-radio value="D">定时发送</sl-radio>\n                    </sl-radio-group>\n                </sl-form-item>\n                <sl-form-item\n                    label="发送时间"\n                    explainOutside\n                >\n                    <sl-date-picker\n                        showTime\n                        allowClear\n                        format="YYYY-MM-DD HH:mm:ss"\n                        v-decorator="[\n                          \'dateTimeChose\',\n                          {\n                            rules: [{ required: true, message: \'请选择发送时间!\' }],\n                          }\n                        ]" />\n                </sl-form-item>\n                <sl-form-item\n                    label="模板名称"\n                    validateStatus="error"\n                    explainOutside\n                    required\n                    help="请填写模板名称!"\n                >\n                    <sl-input\n                        placeholder="请输入模板名称"\n                    />\n                </sl-form-item>\n                <sl-form-item\n                    label="短信内容"\n                    explainOutside\n                >\n                    <sl-textarea\n                        row="2"\n                        v-decorator="[\n                          \'messageArea\',\n                          {\n                            rules: [{ required: true, message: \'请填写短信内容!\' }],\n                          }\n                        ]"\n                    />\n                    <div slot="extra">1.长度不超过1000字符，按67字/条计费</div>\n                    <div slot="extra">2.营销类短信，请在短信模板后面增加"回T退订"</div>\n                    <div slot="extra">3.短信内容不能含有【】符号</div>\n                    <div slot="extra">4.如果是变量内容，模板的格式为：XXX</div>\n                </sl-form-item>\n                <sl-form-item\n                    label="短信签名"\n                    hasFeedback\n                    explainOutside\n                    iconOutside\n                >\n                    <sl-select\n                        showSearch\n                        allowClear\n                        placeholder="请填写短信签名"\n                        v-decorator="[\n                          \'choseGroup\',\n                          {\n                            rules: [{ required: true, message: \'请选择用户群组!\' }],\n                            initialValue: \'a10\'\n                          }\n                        ]"\n                    >\n                        <sl-select-option value="a10" >a10</sl-select-option>\n                        <sl-select-option value="b11" >b11</sl-select-option>\n                    </sl-select>\n                </sl-form-item>\n                <sl-form-item style="margin-left: 120px;">\n                    <sl-button\n                        type="primary"\n                        html-type="submit"\n                    >\n                        Submit\n                    </sl-button>\n                </sl-form-item>\n            </sl-form>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                validateFormTextRight: this.$form.createForm(this),\n              }\n            },\n            methods: {\n                handleSubmit  (e, form) {\n                    e.preventDefault();\n                    this[form].validateFields((err, values) => {\n                        if (!err) {\n                            console.log(\'Received values of form: \', values);\n                        }\n                    });\n                },\n            }\n        }\n    <\/script>',CodeInModal:'    <template>\n        <div>\n            <sl-button type="primary" @click="showModal">\n                <span>显示对话框</span>\n            </sl-button>\n            <sl-modal v-model="isVisible" title="提示" @cancel="handleCancel" @ok="modalSubmit">\n                <sl-form :form="modalForm">\n                    <sl-form-item\n                        label=\'名称\'\n                        hasFeedback\n                        v-bind="modalFormLayout"\n                    >\n                        <sl-input\n                            placeholder="最多输入20个汉字"\n                            v-decorator="[\n                              \'title\',\n                              {\n                                rules: [{ required: true, message: \'请填写名称!\' }],\n                              }\n                            ]"\n                        />\n                    </sl-form-item>\n                    <sl-form-item\n                        label="描述"\n                        v-bind="modalFormLayout"\n                    >\n                        <sl-textarea\n                            placeholder="最多可输入50个汉字"\n                            v-decorator="[\n                              \'messageArea\',\n                              {\n                                rules: [{ required: true, message: \'请填写短信内容!\' }],\n                              }\n                            ]"\n                        />\n                    </sl-form-item>\n                </sl-form>\n            </sl-modal>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                modalForm: this.$form.createForm(this),\n                modalFormLayout: {\n                    labelCol: {span: 6},\n                    wrapperCol: {span: 10},\n                },\n                isVisible: false,\n              }\n            },\n            methods: {\n                showModal() {\n                this.isVisible = true;\n                },\n                handleCancel() {\n                    this.isVisible = false;\n                },\n                modalSubmit() {\n                  this.modalForm.validateFields((err, values) => {\n                    if (err) {\n                      return;\n                    }\n                    console.log(\'Received values of form: \', values);\n                    this.modalForm.resetFields();\n                    this.isVisible = false;\n                  });\n                }\n            }\n        }\n    <\/script>',CodeValidateStatic:'    <template>\n         <div>\n              <sl-form>\n                <sl-form-item\n                    v-bind="vModelFormLayout"\n                    label="名称"\n                    required\n                    hasFeedback\n                    :validateStatus="validateModelField(modelUserName, /^[\\w-\\.(一-龥)]+$/)"\n                >\n                    <div slot="help" v-if="validateModelFieldEmpty(modelUserName)">请输入名称</div>\n                    <div slot="help" v-if="validateModelFieldRule(modelUserName, /^[\\w-\\.(一-龥)]+$/)">名称不符合规则</div>\n                    <div slot="extra">名称不超过25个字符，仅支持中文、英文、数字、下划线、分隔符“-”、小数点</div>\n                    <sl-input v-model="modelUserName.value" @input="modelUserName.dirty = true"/>\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="vModelFormLayout"\n                    required\n                    explainOutside\n                    hasFeedback\n                    :validateStatus="validateModelField(modelMinScale, /^[\\d]+$/)"\n                >\n                    <span slot="label">\n                        最小伸缩数&nbsp;\n                        <sl-tooltip title="提示">\n                            <i class="salus-icon-quest-mark-o"></i>\n                        </sl-tooltip>\n                    </span>\n                    <div slot="help" v-if="validateModelFieldEmpty(modelMinScale)">请输入伸缩数</div>\n                    <div slot="help" v-if="validateModelFieldRule(modelMinScale, /^[\\d]+$/)">请输入数字</div>\n                    <div slot="extra">最小实例数为0，可能会造成伸缩组中文实例支持</div>\n                    <sl-input v-model="modelMinScale.value" @input="modelMinScale.dirty = true"/>\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="vModelFormLayout"\n                    label="输入校验"\n                    explainOutside\n                    hasFeedback\n                    validateStatus="validating"\n                >\n                    <sl-input v-model="modelInputValidate.value" />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="vModelFormLayout"\n                    required\n                    explainOutside\n                    hasFeedback\n                    validateStatus="success"\n                >\n                    <span slot="label">\n                        校验成功&nbsp;\n                        <sl-tooltip title="提示">\n                            <i class="salus-icon-quest-mark-o"></i>\n                        </sl-tooltip>\n                    </span>\n                    <sl-input v-model="modelValidateSuccess.value" />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="vModelFormLayout"\n                    label="警示信息"\n                    hasFeedback\n                    validateStatus="warning"\n                >\n                    <div slot="help">名称不超过25个字符，仅支持中文、英文、数字、下划线、分隔符“-”、小数点</div>\n                    <sl-input v-model="modelValidateWarn.value" />\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="vModelFormTailLayout"\n                    label="最大伸缩数"\n                >\n                    <sl-row :gutter="8">\n                        <sl-col :span="12">\n                            <sl-select v-model="modelMaxScale.value">\n                                <sl-select-option value="Option 1" >Option 1</sl-select-option>\n                                <sl-select-option value="Option 2" >Option 2</sl-select-option>\n                            </sl-select>\n                        </sl-col>\n                        <sl-col :span="12">\n                            <a href="javascript:;">新建启动配置</a>\n                            <sl-tooltip title="提示">\n                                <i class="salus-icon-quest-mark-o"></i>\n                            </sl-tooltip>\n                        </sl-col>\n                    </sl-row>\n                </sl-form-item>\n                <sl-form-item\n                    :labelCol="{span: 3}"\n                    label="最大伸缩数"\n                    hasFeedback\n                    validateStatus="validating"\n                >\n                    <sl-select v-model="modelMaxScale.value" style="width: 331px">\n                        <sl-select-option value="Option 1" >Option 1</sl-select-option>\n                        <sl-select-option value="Option 2" >Option 2</sl-select-option>\n                    </sl-select>\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="vModelFormLayout"\n                    label="计费方式"\n                >\n                    <sl-radio-group v-model="modelBill.value">\n                        <sl-radio value="year">包年</sl-radio>\n                        <sl-radio value="month">包月</sl-radio>\n                        <sl-radio value="day">包天</sl-radio>\n                    </sl-radio-group>\n                </sl-form-item>\n                <sl-form-item\n                    v-bind="vModelFormLayout"\n                    label="购买数量"\n                >\n                    <sl-input-number :min="1" :max="10" v-model="modelPurchase.value" handleType="symbols" />\n                </sl-form-item>\n            </sl-form>\n          </div>\n    </template>\n    <script>\n        export default {\n            data() {\n              return {\n                vModelForm: this.$form.createForm(this),\n                vModelFormLayout: {\n                    labelCol: {span: 3},\n                    wrapperCol: {span: 12},\n                },\n                vModelFormTailLayout: {\n                    labelCol: {span: 3},\n                    wrapperCol: {span: 10},\n                },\n                modelUserName: {value: \'\', dirty: false},\n                modelMinScale: {value: \'\', dirty: false},\n                modelInputValidate: {value: \'无止境的校验\'},\n                modelValidateSuccess: {value: \'成功\'},\n                modelValidateWarn: {value: \'劝退警告\'},\n                modelMaxScale: {value: \'Option 1\'},\n                modelBill: {value: \'year\'},\n                modelPurchase : {value: 1},\n              }\n            },\n            methods: {\n                validateModelField(field, reg) {\n                    if(!field.dirty)\n                        return \'\'\n                    if(this.validateModelFieldEmpty(field) || this.validateModelFieldRule(field, reg))\n                        return \'error\'\n                    return \'success\'\n                },\n                validateModelFieldEmpty(field) {\n                    return field.dirty && !field.value.length;\n                },\n                validateModelFieldRule(field, reg) {\n                    return field.value.length && !reg.test(field.value);\n                },\n            }\n        }\n    <\/script>',CodeJSX:"    const CustomizedForm = {}\n\n    CustomizedForm = Form.create({})(CustomizedForm);",CodeTemplate:'    <template>\n        <sl-form :form="form" />\n    </template>\n    <script>\n    export default {\n      beforeCreate () {\n        this.form = this.$form.createForm(this, options)\n      },\n    }\n    <\/script>',CodeValidateFields:"    const { form: { validateFields } } = this;\n    validateFields((errors, values) => {\n      // ...\n    });\n    validateFields(['field1', 'field2'], (errors, values) => {\n      // ...\n    });\n    validateFields(['field1', 'field2'], options, (errors, values) => {\n      // ...\n    });",CodeValidateFieldsCbErrors:'    {\n      "userName": {\n        "errors": [\n          {\n            "message": "Please input your username!",\n            "field": "userName"\n          }\n        ]\n      },\n      "password": {\n        "errors": [\n          {\n            "message": "Please input your Password!",\n            "field": "password"\n          }\n        ]\n      }\n    }',CodeValidateFieldsCbValues:'    {\n      "userName": "username",\n      "password": "password",\n    }',validateFormTextRight:this.$form.createForm(this),modalForm:this.$form.createForm(this),inlineForm:this.$form.createForm(this),loginForm:this.$form.createForm(this),searchForm:this.$form.createForm(this),validateForm:this.$form.createForm(this),directiveForm:this.$form.createForm(this),vModelForm:this.$form.createForm(this),modalFormLayout:{labelCol:{span:6},wrapperCol:{span:10}},loginFormLayout:{wrapperCol:{span:7}},validateFormLayout:{labelCol:{span:3},wrapperCol:{span:12}},validateFormTailLayout:{wrapperCol:{span:14,offset:6}},directiveFormLayout:{labelCol:{span:3},wrapperCol:{span:12}},vModelFormLayout:{labelCol:{span:3},wrapperCol:{span:12}},vModelFormTailLayout:{labelCol:{span:3},wrapperCol:{span:10}},id:1,isVisible:!1,expand:!1,confirmDirty:!1,asyncTimeout:null,directiveConfirmDirty:!1,modelUserName:{value:"",dirty:!1},modelMinScale:{value:"",dirty:!1},modelInputValidate:{value:"无止境的校验"},modelValidateSuccess:{value:"成功"},modelValidateWarn:{value:"劝退警告"},modelMaxScale:{value:"Option 1"},modelBill:{value:"year"},modelPurchase:{value:1}}},components:{SearchCode:function(){return new Promise(function(e){r.e(0).then(function(t){e(r(637))}.bind(null,r)).catch(r.oe)})}},beforeCreate:function(){this.dynamicAddItemForm=this.$form.createForm(this),this.dynamicAddItemForm.getFieldDecorator("keys",{initialValue:[1],preserve:!0})},mounted:function(){var e=this;this.$nextTick(function(){e.inlineForm.validateFields(),e.directiveForm.validateFields()})},computed:{count:function(){return this.expand?11:7}},methods:{remove:function(e){var t=this.dynamicAddItemForm,r=t.getFieldValue("keys");1!==r.length&&t.setFieldsValue({keys:r.filter(function(t){return t!==e})})},add:function(){var e=this.dynamicAddItemForm,t=e.getFieldValue("keys").concat(++this.id);e.setFieldsValue({keys:t})},handleSubmit:function(e,t){e.preventDefault(),this[t].validateFields(function(e,t){e||console.log("Received values of form: ",t)})},showModal:function(){this.isVisible=!0},handleCancel:function(){this.isVisible=!1},modalSubmit:function(){var e=this;this.modalForm.validateFields(function(t,r){t||(console.log("Received values of form: ",r),e.modalForm.resetFields(),e.isVisible=!1)})},userNameError:function(){var e=this.inlineForm,t=e.getFieldError;return(0,e.isFieldTouched)("userName")&&t("userName")},passwordError:function(){var e=this.inlineForm,t=e.getFieldError;return(0,e.isFieldTouched)("password")&&t("password")},hasErrors:function(e){return Object.keys(e).some(function(t){return e[t]})},handleReset:function(){this.searchForm.resetFields()},toggle:function(){this.expand=!this.expand},handleConfirmBlur:function(e){var t=e.target.value;this.confirmDirty=this.confirmDirty||!!t},compareToFirstPassword:function(e,t,r){var a=this.validateForm;t&&t!==a.getFieldValue("password")?r("密码不一致!"):r()},validateToNextPassword:function(e,t,r){var a=this.validateForm;t&&this.confirmDirty&&a.validateFields(["confirm"],{force:!0}),r()},directiveHandleConfirmBlur:function(e){var t=e.target.value;this.directiveConfirmDirty=this.directiveConfirmDirty||!!t},directiveCompareToFirstPassword:function(e,t,r){var a=this.directiveForm;t&&t!==a.getFieldValue("password")?r("密码不一致!"):r()},directiveValidateToNextPassword:function(e,t,r){var a=this.directiveForm;t&&this.directiveConfirmDirty&&a.validateFields(["confirm"],{force:!0}),r()},validatorAsync:function(e,t,r){clearTimeout(this.asyncTimeout),this.asyncTimeout=setTimeout(function(){r()},1e3)},fieldTouched:function(e){return this.directiveForm.isFieldTouched(e)},fieldError:function(e){return this.fieldTouched(e)&&this.directiveForm.getFieldError(e)},validErrors:function(){var e=this,t=this.directiveForm.getFieldsError();return!Object.keys(this.directiveForm.getFieldsValue()).every(function(t){return e.fieldTouched(t)})||Object.keys(t).some(function(e){return t[e]})},validateModelField:function(e,t){return e.dirty?this.validateModelFieldEmpty(e)||this.validateModelFieldRule(e,t)?"error":"success":""},validateModelFieldEmpty:function(e){return e.dirty&&!e.value.length},validateModelFieldRule:function(e,t){return e.value.length&&!t.test(e.value)}}},s=(r(583),r(53)),l=Object(s.a)(n,a,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"detail-box"},[t("h1",[this._v("Form 表单")]),this._v(" "),t("p",[this._v("具有数据收集、校验和提交功能的表单，包含复选框、单选框、输入框、下拉选择框等元素。")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[r("thead",[r("tr",[r("th",{attrs:{width:"15%"}},[e._v("参数")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("描述")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("类型")]),e._v(" "),r("th",{attrs:{width:"15%"}},[e._v("默认值")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("form")]),e._v(" "),r("td",[e._v("经 Form.create() 包装过的组件会自带 this.form 属性，如果使用template语法，可以使用this.$form.createForm(this, options)")]),e._v(" "),r("td",[e._v("object")]),e._v(" "),r("td",[e._v("无")])]),e._v(" "),r("tr",[r("td",[e._v("hideRequiredMark")]),e._v(" "),r("td",[e._v("隐藏所有表单项的必选标记")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])]),e._v(" "),r("tr",[r("td",[e._v("layout")]),e._v(" "),r("td",[e._v("表单布局")]),e._v(" "),r("td",[e._v("'horizontal'|'vertical'|'inline'")]),e._v(" "),r("td",[e._v("'horizontal'")])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[r("thead",[r("tr",[r("th",{attrs:{width:"15%"}},[e._v("事件名称")]),e._v(" "),r("th",{attrs:{width:"70%"}},[e._v("说明")]),e._v(" "),r("th",{attrs:{width:"15%"}},[e._v("回调参数")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("submit")]),e._v(" "),r("td",[e._v("数据验证成功后回调事件")]),e._v(" "),r("td",[e._v("Function(e: Event)")])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[r("thead",[r("tr",[r("th",{attrs:{width:"20%"}},[e._v("参数")]),e._v(" "),r("th",{attrs:{width:"40%"}},[e._v("说明")]),e._v(" "),r("th",{attrs:{width:"40%"}},[e._v("类型")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("props")]),e._v(" "),r("td",[e._v("仅仅支持Form.create({})(CustomizedForm)的使用方式，父组件需要映射到表单项上的属性声明(和vue组件props一致)")]),e._v(" "),r("td",[e._v("{}")])]),e._v(" "),r("tr",[r("td",[e._v("mapPropsToFields")]),e._v(" "),r("td",[e._v("把父组件的属性映射到表单项上（如：把 Redux store 中的值读出），需要对返回值中的表单域数据用 Form.createFormField 标记，如果使用$form.createForm创建收集器，你可以将任何数据映射到Field中，不受父组件约束")]),e._v(" "),r("td",[e._v("(props) => ({ [fieldName]: FormField { value } })")])]),e._v(" "),r("tr",[r("td",[e._v("validateMessages")]),e._v(" "),r("td",[e._v("默认校验信息，可用于把默认错误信息改为中文等")]),e._v(" "),r("td",[e._v("Object { [nested.path]: String }")])]),e._v(" "),r("tr",[r("td",[e._v("onFieldsChange")]),e._v(" "),r("td",[e._v("当 Form.Item 子节点的值发生改变时触发，可以把对应的值转存到 Redux store")]),e._v(" "),r("td",[e._v("Function(props, fields)")])]),e._v(" "),r("tr",[r("td",[e._v("onValuesChange")]),e._v(" "),r("td",[e._v("任一表单域的值发生改变时的回调\t")]),e._v(" "),r("td",[e._v("(props, values) => void")])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[r("thead",[r("tr",[r("th",{attrs:{width:"20%"}},[e._v("参数")]),e._v(" "),r("th",{attrs:{width:"40%"}},[e._v("描述")]),e._v(" "),r("th",{attrs:{width:"40%"}},[e._v("类型")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("getFieldDecorator")]),e._v(" "),r("td",[e._v("用于和表单进行双向绑定，单文件template可以使用指令v-decorator进行绑定，详见下方描述")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("getFieldError")]),e._v(" "),r("td",[e._v("获取某个输入控件的 Error")]),e._v(" "),r("td",[e._v("Function(name)")])]),e._v(" "),r("tr",[r("td",[e._v("getFieldsError")]),e._v(" "),r("td",[e._v("获取一组输入控件的 Error ，如不传入参数，则获取全部组件的 Error")]),e._v(" "),r("td",[e._v("Function([names: string[]])")])]),e._v(" "),r("tr",[r("td",[e._v("getFieldValue")]),e._v(" "),r("td",[e._v("获取一个输入控件的值")]),e._v(" "),r("td",[e._v("Function(fieldName: string)")])]),e._v(" "),r("tr",[r("td",[e._v("getFieldsValue")]),e._v(" "),r("td",[e._v("获取一组输入控件的值，如不传入参数，则获取全部组件的值")]),e._v(" "),r("td",[e._v("Function([fieldNames: string[]])")])]),e._v(" "),r("tr",[r("td",[e._v("isFieldsTouched")]),e._v(" "),r("td",[e._v("判断是否任一输入控件经历过 getFieldDecorator 或 v-decorator 的值收集时机 options.trigger")]),e._v(" "),r("td",[e._v("(names?: string[]) => boolean")])]),e._v(" "),r("tr",[r("td",[e._v("isFieldTouched")]),e._v(" "),r("td",[e._v("判断一个输入控件是否经历过 getFieldDecorator 或 v-decorator 的值收集时机 options.trigger")]),e._v(" "),r("td",[e._v("(name: string) => boolean")])]),e._v(" "),r("tr",[r("td",[e._v("isFieldValidating")]),e._v(" "),r("td",[e._v("判断一个输入控件是否在校验状态")]),e._v(" "),r("td",[e._v("Function(name)")])]),e._v(" "),r("tr",[r("td",[e._v("resetFields")]),e._v(" "),r("td",[e._v("重置一组输入控件的值（为 initialValue）与状态，如不传入参数，则重置所有组件")]),e._v(" "),r("td",[e._v("Function([names: string[]])")])]),e._v(" "),r("tr",[r("td",[e._v("setFields")]),e._v(" "),r("td",[e._v("设置一组输入控件的值与错误状态")]),e._v(" "),r("td",[e._v("Function({ [fieldName]: { value: any, errors: [Error] } })")])]),e._v(" "),r("tr",[r("td",[e._v("setFieldsValue")]),e._v(" "),r("td",[e._v("设置一组输入控件的值")]),e._v(" "),r("td",[e._v("Function({ [fieldName]: value }")])]),e._v(" "),r("tr",[r("td",[e._v("validateFields")]),e._v(" "),r("td",[e._v("校验并获取一组输入域的值与 Error，若 fieldNames 参数为空，则校验全部组件")]),e._v(" "),r("td",[e._v("Function([fieldNames: string[]], [options: object], callback: Function)")])]),e._v(" "),r("tr",[r("td",[e._v("validateFieldsAndScroll")]),e._v(" "),r("td",[e._v("与 validateFields 相似，但校验完后，如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围")]),e._v(" "),r("td",[e._v("参考 validateFields")])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[r("thead",[r("tr",[r("th",{attrs:{width:"15%"}},[e._v("参数")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("描述")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("类型")]),e._v(" "),r("th",{attrs:{width:"15%"}},[e._v("默认值")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("options.first")]),e._v(" "),r("td",[e._v("若为 true，则每一表单域的都会在碰到第一个失败了的校验规则后停止校验")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])]),e._v(" "),r("tr",[r("td",[e._v("options.firstFields")]),e._v(" "),r("td",[e._v("指定表单域会在碰到第一个失败了的校验规则后停止校验")]),e._v(" "),r("td",[e._v("String[]")]),e._v(" "),r("td",[e._v("[]")])]),e._v(" "),r("tr",[r("td",[e._v("options.force")]),e._v(" "),r("td",[e._v("对已经校验过的表单域，在 validateTrigger 再次被触发时是否再次校验")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])]),e._v(" "),r("tr",[r("td",[e._v("options.scroll")]),e._v(" "),r("td",[e._v("定义 validateFieldsAndScroll 的滚动行为")]),e._v(" "),r("td",[e._v("Object")]),e._v(" "),r("td",[e._v("{}")])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[r("thead",[r("tr",[r("th",{attrs:{width:"15%"}},[e._v("参数")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("描述")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("类型")]),e._v(" "),r("th",{attrs:{width:"15%"}},[e._v("默认值")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("id")]),e._v(" "),r("td",[e._v("必填输入控件唯一标志。支持嵌套式的写法")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("options.getValueFromEvent")]),e._v(" "),r("td",[e._v("可以把 onChange 的参数（如 event）转化为控件的值")]),e._v(" "),r("td",[e._v("function(..args)")]),e._v(" "),r("td",[e._v("[]")])]),e._v(" "),r("tr",[r("td",[e._v("options.initialValue")]),e._v(" "),r("td",[e._v("子节点的初始值，类型、可选值均由子节点决定(注意：由于内部校验时使用 === 判断是否变化，建议使用变量缓存所需设置的值而非直接使用字面量))")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("options.normalize")]),e._v(" "),r("td",[e._v("转换默认的 value 给控件")]),e._v(" "),r("td",[e._v("function(value, prevValue, allValues): any")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("options.preserve")]),e._v(" "),r("td",[e._v("即便字段不再使用，也保留该字段的值")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])]),e._v(" "),r("tr",[r("td",[e._v("options.rules")]),e._v(" "),r("td",[e._v("校验规则，参考下方文档")]),e._v(" "),r("td",[e._v("object[]")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("options.trigger")]),e._v(" "),r("td",[e._v("收集子节点的值的时机")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("'change'")])]),e._v(" "),r("tr",[r("td",[e._v("options.validateFirst")]),e._v(" "),r("td",[e._v("当某一规则校验不通过时，是否停止剩下的规则的校验")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])]),e._v(" "),r("tr",[r("td",[e._v("options.validateTrigger")]),e._v(" "),r("td",[e._v("校验子节点值的时机")]),e._v(" "),r("td",[e._v("string|string[]")]),e._v(" "),r("td",[e._v("'change'")])]),e._v(" "),r("tr",[r("td",[e._v("options.valuePropName")]),e._v(" "),r("td",[e._v("子节点的值的属性，如 Switch 的是 'checked'")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("'value'")])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[r("thead",[r("tr",[r("th",{attrs:{width:"15%"}},[e._v("参数")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("描述")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("类型")]),e._v(" "),r("th",{attrs:{width:"15%"}},[e._v("默认值")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("colon")]),e._v(" "),r("td",[e._v("配合 label 属性使用，表示是否显示 label 后面的冒号")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("true")])]),e._v(" "),r("tr",[r("td",[e._v("extra")]),e._v(" "),r("td",[e._v("额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个")]),e._v(" "),r("td",[e._v("string|slot")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("hasFeedback")]),e._v(" "),r("td",[e._v("配合 validateStatus 属性使用，展示校验状态图标，建议只配合 Input 组件使用")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])]),e._v(" "),r("tr",[r("td",[e._v("help")]),e._v(" "),r("td",[e._v("提示信息，如不设置，则会根据校验规则自动生成")]),e._v(" "),r("td",[e._v("string|slot")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("label")]),e._v(" "),r("td",[e._v("label 标签的文本")]),e._v(" "),r("td",[e._v("string|slot")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("labelCol")]),e._v(" "),r("td",[e._v("label 标签布局，同 <Col> 组件，设置 span offset 值，如 {span: 3, offset: 12} 或 sm: {span: 3, offset: 12}")]),e._v(" "),r("td",[e._v("object")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("required")]),e._v(" "),r("td",[e._v("是否必填，如不设置，则会根据校验规则自动生成")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])]),e._v(" "),r("tr",[r("td",[e._v("validateStatus")]),e._v(" "),r("td",[e._v("校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("wrapperCol")]),e._v(" "),r("td",[e._v("需要为输入控件设置布局样式时，使用该属性，用法同 labelCol")]),e._v(" "),r("td",[e._v("object")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("options.valuePropName")]),e._v(" "),r("td",[e._v("子节点的值的属性，如 Switch 的是 'checked'")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("'value'")])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[r("thead",[r("tr",[r("th",{attrs:{width:"15%"}},[e._v("参数")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("描述")]),e._v(" "),r("th",{attrs:{width:"35%"}},[e._v("类型")]),e._v(" "),r("th",{attrs:{width:"15%"}},[e._v("默认值")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("enum")]),e._v(" "),r("td",[e._v("枚举类型")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("len")]),e._v(" "),r("td",[e._v("字段长度")]),e._v(" "),r("td",[e._v("number")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("max")]),e._v(" "),r("td",[e._v("最大长度")]),e._v(" "),r("td",[e._v("number")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("min")]),e._v(" "),r("td",[e._v("最小长度的")]),e._v(" "),r("td",[e._v("number")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("message")]),e._v(" "),r("td",[e._v("校验文案")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("pattern")]),e._v(" "),r("td",[e._v("正则表达式校验")]),e._v(" "),r("td",[e._v("RegExp")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("required")]),e._v(" "),r("td",[e._v("是否必选")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])]),e._v(" "),r("tr",[r("td",[e._v("transform")]),e._v(" "),r("td",[e._v("校验前转换字段值")]),e._v(" "),r("td",[e._v("function(value) => transformedValue:any")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("type")]),e._v(" "),r("td",[e._v("内建校验类型，可选:string、number、boolean、method、regexp、integer、float、array、object、enum、date、url、hex、email")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("'string'")])]),e._v(" "),r("tr",[r("td",[e._v("validator")]),e._v(" "),r("td",[e._v("自定义校验（注意，callback 必须被调用）")]),e._v(" "),r("td",[e._v("function(rule, value, callback)")]),e._v(" "),r("td",[e._v("-")])]),e._v(" "),r("tr",[r("td",[e._v("whitespace")]),e._v(" "),r("td",[e._v("必选时，空格是否会被视为错误")]),e._v(" "),r("td",[e._v("boolean")]),e._v(" "),r("td",[e._v("false")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("更多高级用法参考："),t("a",{attrs:{href:"https://github.com/yiminghe/async-validator"}},[this._v("async-validator")])])}],!1,null,"ae7f7862",null);l.options.__file="src/components/form/form.vue";t.default=l.exports}}]);