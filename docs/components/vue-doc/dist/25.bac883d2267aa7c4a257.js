(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{826:function(t,e,a){"use strict";a.r(e);var n=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"page-box"},[t._m(0),t._v(" "),a("div",{staticClass:"detail-box"},[a("h2",[t._v("基础数字输入框")]),t._v(" "),a("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),a("sl-input-number",{attrs:{min:1,max:10},on:{change:t.onChange},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}}),t._v(" "),a("search-code",{attrs:{code:t.CodeBasic}})],1),t._v(" "),a("div",{staticClass:"detail-box"},[a("h2",[t._v("加减符号输入框")]),t._v(" "),a("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),a("sl-input-number",{attrs:{min:1,max:10,handleType:"symbols"},on:{change:t.onChange},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}}),t._v(" "),a("search-code",{attrs:{code:t.CodeSymbols}})],1),t._v(" "),a("div",{staticClass:"detail-box"},[a("h2",[t._v("三种大小")]),t._v(" "),a("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),a("sl-input-number",{attrs:{size:"large",min:1,max:10,defaultValue:3},on:{change:t.onChange}}),t._v(" "),a("sl-input-number",{attrs:{min:1,max:10,defaultValue:3},on:{change:t.onChange}}),t._v(" "),a("sl-input-number",{attrs:{size:"small",min:1,max:10,defaultValue:3},on:{change:t.onChange}}),t._v(" "),a("search-code",{attrs:{code:t.CodeSize}})],1),t._v(" "),a("div",{staticClass:"detail-box"},[a("h2",[t._v("小数")]),t._v(" "),a("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),a("sl-input-number",{attrs:{min:0,max:10,step:.1,defaultValue:3}}),t._v(" "),a("search-code",{attrs:{code:t.CodeDigital}})],1),t._v(" "),a("div",{staticClass:"detail-box"},[a("h2",[t._v("格式化展示")]),t._v(" "),a("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),a("sl-input-number",{attrs:{defaultValue:3,formatter:function(t){return("$ "+t).replace(/\B(?=(\d{3})+(?!\d))/g,",")},parser:function(t){return t.replace(/\$\s?|(,*)/g,"")}},on:{change:t.onChange}}),t._v(" "),a("sl-input-number",{attrs:{defaultValue:3,min:0,max:100,formatter:function(t){return t+"%"},parser:function(t){return t.replace("%","")}},on:{change:t.onChange}}),t._v(" "),a("search-code",{attrs:{code:t.CodeFormat}})],1),t._v(" "),a("div",{staticClass:"detail-box"},[a("h2",[t._v("禁用")]),t._v(" "),a("p",{staticClass:"code-left-line"},[t._v("Demo")]),t._v(" "),a("sl-input-number",{attrs:{min:1,max:10,disabled:!0,defaultValue:3}}),t._v(" "),a("search-code",{attrs:{code:t.CodeDisable}})],1),t._v(" "),t._m(1)])};n._withStripped=!0;var v={name:"InputNumber",components:{SearchCode:function(){return new Promise(function(t){a.e(0).then(function(e){t(a(831))}.bind(null,a)).catch(a.oe)})}},data:function(){return{CodeBasic:'    <template>\n        <div>\n            <sl-input-number :min="1" :max="10" v-model="value" @change="onChange" />\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n                return {\n                    value: 3,\n                }\n            },\n            methods: {\n                onChange(value) {\n                    console.log(\'changed\', value);\n                },\n            }\n        }\n    <\/script>',CodeSymbols:'    <template>\n        <div>\n            <sl-input-number :min="1" :max="10" :defaultValue="3" handleType="symbols" />\n        </div>\n    </template>',CodeSize:'    <template>\n        <div>\n            <sl-input-number size="large" :min="1" :max="10" :defaultValue="3" />\n            <sl-input-number :min="1" :max="10" :defaultValue="3" />\n            <sl-input-number size="small" :min="1" :max="10" :defaultValue="3" />\n        </div>\n    </template>',CodeDigital:'     <template>\n        <div>\n            <sl-input-number :min="0" :max="10" :step="0.1" :defaultValue="3" />\n        </div>\n    </template>',CodeFormat:'    <template>\n        <div>\n            <sl-input-number\n                :defaultValue="3"\n                :formatter="value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \',\')"\n                :parser="value => value.replace(/\\$\\s?|(,*)/g, \'\')"\n            />\n            <sl-input-number\n                :defaultValue="3"\n                :min="0"\n                :max="100"\n                :formatter="value => `${value}%`"\n                :parser="value => value.replace(\'%\', \'\')"\n            />\n        </div>\n    </template>',CodeDisable:'    <template>\n        <div>\n            <sl-input-number :min="1" :max="10" :disabled="true" :defaultValue="3" />\n        </div>\n    </template>',value:3}},methods:{onChange:function(t){console.log("changed",t)}}},l=a(55),s=Object(l.a)(v,n,[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"detail-box"},[e("h1",[this._v("InputNumber 数字输入框")]),this._v(" "),e("p",[this._v("通过鼠标或键盘，输入范围内的数值。")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"detail-box"},[a("h2",[t._v("API")]),t._v(" "),a("p",{staticClass:"row-in-round"},[t._v("sl-input-number")]),t._v(" "),a("table",{staticClass:"salus-table salus-table-striped salus-table-hover"},[a("thead",[a("tr",[a("th",{attrs:{width:"15%"}},[t._v("参数")]),t._v(" "),a("th",{attrs:{width:"35%"}},[t._v("描述")]),t._v(" "),a("th",{attrs:{width:"35%"}},[t._v("类型")]),t._v(" "),a("th",{attrs:{width:"15%"}},[t._v("默认值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("autoFocus")]),t._v(" "),a("td",[t._v("自动获取焦点")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("defaultValue")]),t._v(" "),a("td",[t._v("初始值")]),t._v(" "),a("td",[t._v("number ")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("disabled")]),t._v(" "),a("td",[t._v("禁用")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("formatter")]),t._v(" "),a("td",[t._v("指定输入框展示值的格式")]),t._v(" "),a("td",[t._v("function(value: number | string): string")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("max")]),t._v(" "),a("td",[t._v("最大值")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("Infinity")])]),t._v(" "),a("tr",[a("td",[t._v("min")]),t._v(" "),a("td",[t._v("最小值")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("-Infinity")])]),t._v(" "),a("tr",[a("td",[t._v("parser")]),t._v(" "),a("td",[t._v("指定从 formatter 里转换回数字的方式，和 formatter 搭配使用")]),t._v(" "),a("td",[t._v("function( string): number")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("precision")]),t._v(" "),a("td",[t._v("数值精度")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("decimalSeparator")]),t._v(" "),a("td",[t._v("小数点")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("size")]),t._v(" "),a("td",[t._v("输入框大小")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("无")])]),t._v(" "),a("tr",[a("td",[t._v("step")]),t._v(" "),a("td",[t._v("每次改变步数，可以为小数")]),t._v(" "),a("td",[t._v("number|string")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("value(v-model)")]),t._v(" "),a("td",[t._v("当前值")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td")])])]),t._v(" "),a("p",{staticClass:"row-in-round"},[t._v("sl-input-number 事件")]),t._v(" "),a("div",{staticClass:"detail-block"},[a("table",{staticClass:"salus-table salus-table-hover salus-table-striped"},[a("thead",[a("tr",[a("th",{attrs:{width:"15%"}},[t._v("事件名称")]),t._v(" "),a("th",{attrs:{width:"70%"}},[t._v("说明")]),t._v(" "),a("th",{attrs:{width:"15%"}},[t._v("回调参数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("change")]),t._v(" "),a("td",[t._v("变化回调")]),t._v(" "),a("td",[t._v("Function(value: number | string)")])])])])])])}],!1,null,null,null);s.options.__file="src/components/input-number/input-number.vue";e.default=s.exports}}]);